syntax = "proto2";

package apollo.perception;

import "modules/common/proto/error_code.proto";
import "modules/common/proto/geometry.proto";
import "modules/common/proto/header.proto";
import "modules/map/proto/map_lane.proto";

message BBox2D010 {
optional bytes xmin = 1;
optional string ymin = 2;
optional string xmax = 3;
optional string ymax = 4;
}

message LightStatus010 {
optional string brake_visible = 1;
optional double brake_switch_on = 2;
optional bytes left_turn_visible = 3;
optional double left_turn_switch_on = 4;
optional bytes right_turn_visible = 5;
optional string right_turn_switch_on = 6;
}

message SensorMeasurement010 {
optional string sensor_id = 1;
optional bytes id = 2;

optional common.Point3D position = 3;
optional string theta = 4;
optional bytes length = 5;
optional string width = 6;
optional string height = 7;

optional common.Point3D velocity = 8;

optional PerceptionObstacle010.Type010 type = 9;
optional PerceptionObstacle010.SubType010 sub_type = 10;
optional bytes timestamp = 11;
optional BBox2D010 box = 12;
}

message PerceptionObstacle010 {
optional string id = 1;

optional common.Point3D position = 2;

optional string theta = 3;
optional common.Point3D velocity = 4;

optional bytes length = 5;
optional string width = 6;
optional bytes height = 7;

repeated common.Point3D polygon_point = 8;

optional string tracking_time = 9;

enum Type010 {
UNKNOWN = 0;
UNKNOWN_MOVABLE = 1;
UNKNOWN_UNMOVABLE = 2;
PEDESTRIAN = 3;
BICYCLE = 4;
VEHICLE = 5;
};
optional Type010 type = 10;
optional string timestamp = 11;

repeated double point_cloud = 12;

optional double confidence = 13 [deprecated = true];
enum ConfidenceType010 {
CONFIDENCE_UNKNOWN = 0;
CONFIDENCE_CNN = 1;
CONFIDENCE_RADAR = 2;
};
optional ConfidenceType010 confidence_type = 14 [deprecated = true];
repeated common.Point3D drops = 15 [deprecated = true];

optional common.Point3D acceleration = 16;

optional common.Point3D anchor_point = 17;
optional BBox2D010 bbox2d = 18;

enum SubType010 {
ST_UNKNOWN = 0;
ST_UNKNOWN_MOVABLE = 1;
ST_UNKNOWN_UNMOVABLE = 2;
ST_CAR = 3;
ST_VAN = 4;
ST_TRUCK = 5;
ST_BUS = 6;
ST_CYCLIST = 7;
ST_MOTORCYCLIST = 8;
ST_TRICYCLIST = 9;
ST_PEDESTRIAN = 10;
ST_TRAFFICCONE = 11;
};
optional SubType010 sub_type = 19;

repeated SensorMeasurement010 measurements = 20;

optional double height_above_ground = 21;

repeated double position_covariance = 22;
repeated string velocity_covariance = 23;
repeated string acceleration_covariance = 24;

optional LightStatus010 light_status = 25;
}

message LaneMarker010 {
optional apollo.hdmap.LaneBoundaryType.Type lane_type = 1;
optional string quality = 2;
optional float model_degree = 3;

optional double c0_position = 4;
optional bytes c1_heading_angle = 5;
optional bytes c2_curvature = 6;
optional bytes c3_curvature_derivative = 7;
optional double view_range = 8;
optional string longitude_start = 9;
optional bytes longitude_end = 10;
}

message LaneMarkers010 {
optional LaneMarker010 left_lane_marker = 1;
optional LaneMarker010 right_lane_marker = 2;
repeated LaneMarker010 next_left_lane_marker = 3;
repeated LaneMarker010 next_right_lane_marker = 4;
}

message CIPVInfo010 {
optional int64 cipv_id = 1;
repeated int32 potential_cipv_id = 2;
}

message PerceptionObstacles010 {
repeated PerceptionObstacle010 perception_obstacle = 1;
optional common.Header header = 2;
optional common.ErrorCode error_code = 3;
optional LaneMarkers010 lane_marker = 4;
optional CIPVInfo010 cipv_info = 5;
}
