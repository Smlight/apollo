syntax = "proto2";

package apollo.perception;

import "modules/common/proto/error_code.proto";
import "modules/common/proto/geometry.proto";
import "modules/common/proto/header.proto";
import "modules/map/proto/map_lane.proto";

message BBox2D001 {
optional double xmin = 1;
optional bytes ymin = 2;
optional double xmax = 3;
optional double ymax = 4;
}

message LightStatus001 {
optional double brake_visible = 1;
optional double brake_switch_on = 2;
optional string left_turn_visible = 3;
optional bytes left_turn_switch_on = 4;
optional string right_turn_visible = 5;
optional double right_turn_switch_on = 6;
}

message SensorMeasurement001 {
optional bytes sensor_id = 1;
optional uint64 id = 2;

optional common.Point3D position = 3;
optional bytes theta = 4;
optional string length = 5;
optional double width = 6;
optional string height = 7;

optional common.Point3D velocity = 8;

optional PerceptionObstacle001.Type001 type = 9;
optional PerceptionObstacle001.SubType001 sub_type = 10;
optional bytes timestamp = 11;
optional BBox2D001 box = 12;
}

message PerceptionObstacle001 {
optional bytes id = 1;

optional common.Point3D position = 2;

optional bytes theta = 3;
optional common.Point3D velocity = 4;

optional string length = 5;
optional string width = 6;
optional bytes height = 7;

repeated common.Point3D polygon_point = 8;

optional double tracking_time = 9;

enum Type001 {
UNKNOWN = 0;
UNKNOWN_MOVABLE = 1;
UNKNOWN_UNMOVABLE = 2;
PEDESTRIAN = 3;
BICYCLE = 4;
VEHICLE = 5;
};
optional Type001 type = 10;
optional string timestamp = 11;

repeated string point_cloud = 12;

optional double confidence = 13 [deprecated = true];
enum ConfidenceType001 {
CONFIDENCE_UNKNOWN = 0;
CONFIDENCE_CNN = 1;
CONFIDENCE_RADAR = 2;
};
optional ConfidenceType001 confidence_type = 14 [deprecated = true];
repeated common.Point3D drops = 15 [deprecated = true];

optional common.Point3D acceleration = 16;

optional common.Point3D anchor_point = 17;
optional BBox2D001 bbox2d = 18;

enum SubType001 {
ST_UNKNOWN = 0;
ST_UNKNOWN_MOVABLE = 1;
ST_UNKNOWN_UNMOVABLE = 2;
ST_CAR = 3;
ST_VAN = 4;
ST_TRUCK = 5;
ST_BUS = 6;
ST_CYCLIST = 7;
ST_MOTORCYCLIST = 8;
ST_TRICYCLIST = 9;
ST_PEDESTRIAN = 10;
ST_TRAFFICCONE = 11;
};
optional SubType001 sub_type = 19;

repeated SensorMeasurement001 measurements = 20;

optional double height_above_ground = 21;

repeated string position_covariance = 22;
repeated bytes velocity_covariance = 23;
repeated double acceleration_covariance = 24;

optional LightStatus001 light_status = 25;
}

message LaneMarker001 {
optional apollo.hdmap.LaneBoundaryType.Type lane_type = 1;
optional string quality = 2;
optional uint64 model_degree = 3;

optional double c0_position = 4;
optional string c1_heading_angle = 5;
optional double c2_curvature = 6;
optional double c3_curvature_derivative = 7;
optional double view_range = 8;
optional bytes longitude_start = 9;
optional double longitude_end = 10;
}

message LaneMarkers001 {
optional LaneMarker001 left_lane_marker = 1;
optional LaneMarker001 right_lane_marker = 2;
repeated LaneMarker001 next_left_lane_marker = 3;
repeated LaneMarker001 next_right_lane_marker = 4;
}

message CIPVInfo001 {
optional int64 cipv_id = 1;
repeated double potential_cipv_id = 2;
}

message PerceptionObstacles001 {
repeated PerceptionObstacle001 perception_obstacle = 1;
optional common.Header header = 2;
optional common.ErrorCode error_code = 3;
optional LaneMarkers001 lane_marker = 4;
optional CIPVInfo001 cipv_info = 5;
}
message BBox2D002 {
optional double xmin = 1;
optional string ymin = 2;
optional double xmax = 3;
optional bytes ymax = 4;
}

message LightStatus002 {
optional bytes brake_visible = 1;
optional bytes brake_switch_on = 2;
optional string left_turn_visible = 3;
optional double left_turn_switch_on = 4;
optional bytes right_turn_visible = 5;
optional bytes right_turn_switch_on = 6;
}

message SensorMeasurement002 {
optional bytes sensor_id = 1;
optional float id = 2;

optional common.Point3D position = 3;
optional bytes theta = 4;
optional string length = 5;
optional double width = 6;
optional string height = 7;

optional common.Point3D velocity = 8;

optional PerceptionObstacle002.Type002 type = 9;
optional PerceptionObstacle002.SubType002 sub_type = 10;
optional string timestamp = 11;
optional BBox2D002 box = 12;
}

message PerceptionObstacle002 {
optional int64 id = 1;

optional common.Point3D position = 2;

optional double theta = 3;
optional common.Point3D velocity = 4;

optional string length = 5;
optional string width = 6;
optional double height = 7;

repeated common.Point3D polygon_point = 8;

optional bytes tracking_time = 9;

enum Type002 {
UNKNOWN = 0;
UNKNOWN_MOVABLE = 1;
UNKNOWN_UNMOVABLE = 2;
PEDESTRIAN = 3;
BICYCLE = 4;
VEHICLE = 5;
};
optional Type002 type = 10;
optional double timestamp = 11;

repeated string point_cloud = 12;

optional bytes confidence = 13 [deprecated = true];
enum ConfidenceType002 {
CONFIDENCE_UNKNOWN = 0;
CONFIDENCE_CNN = 1;
CONFIDENCE_RADAR = 2;
};
optional ConfidenceType002 confidence_type = 14 [deprecated = true];
repeated common.Point3D drops = 15 [deprecated = true];

optional common.Point3D acceleration = 16;

optional common.Point3D anchor_point = 17;
optional BBox2D002 bbox2d = 18;

enum SubType002 {
ST_UNKNOWN = 0;
ST_UNKNOWN_MOVABLE = 1;
ST_UNKNOWN_UNMOVABLE = 2;
ST_CAR = 3;
ST_VAN = 4;
ST_TRUCK = 5;
ST_BUS = 6;
ST_CYCLIST = 7;
ST_MOTORCYCLIST = 8;
ST_TRICYCLIST = 9;
ST_PEDESTRIAN = 10;
ST_TRAFFICCONE = 11;
};
optional SubType002 sub_type = 19;

repeated SensorMeasurement002 measurements = 20;

optional double height_above_ground = 21;

repeated string position_covariance = 22;
repeated bytes velocity_covariance = 23;
repeated string acceleration_covariance = 24;

optional LightStatus002 light_status = 25;
}

message LaneMarker002 {
optional apollo.hdmap.LaneBoundaryType.Type lane_type = 1;
optional string quality = 2;
optional uint64 model_degree = 3;

optional string c0_position = 4;
optional bytes c1_heading_angle = 5;
optional string c2_curvature = 6;
optional double c3_curvature_derivative = 7;
optional bytes view_range = 8;
optional double longitude_start = 9;
optional double longitude_end = 10;
}

message LaneMarkers002 {
optional LaneMarker002 left_lane_marker = 1;
optional LaneMarker002 right_lane_marker = 2;
repeated LaneMarker002 next_left_lane_marker = 3;
repeated LaneMarker002 next_right_lane_marker = 4;
}

message CIPVInfo002 {
optional uint32 cipv_id = 1;
repeated double potential_cipv_id = 2;
}

message PerceptionObstacles002 {
repeated PerceptionObstacle002 perception_obstacle = 1;
optional common.Header header = 2;
optional common.ErrorCode error_code = 3;
optional LaneMarkers002 lane_marker = 4;
optional CIPVInfo002 cipv_info = 5;
}
message BBox2D003 {
optional double xmin = 1;
optional bytes ymin = 2;
optional double xmax = 3;
optional string ymax = 4;
}

message LightStatus003 {
optional bytes brake_visible = 1;
optional string brake_switch_on = 2;
optional bytes left_turn_visible = 3;
optional bytes left_turn_switch_on = 4;
optional bytes right_turn_visible = 5;
optional bytes right_turn_switch_on = 6;
}

message SensorMeasurement003 {
optional bytes sensor_id = 1;
optional double id = 2;

optional common.Point3D position = 3;
optional string theta = 4;
optional string length = 5;
optional string width = 6;
optional bytes height = 7;

optional common.Point3D velocity = 8;

optional PerceptionObstacle003.Type003 type = 9;
optional PerceptionObstacle003.SubType003 sub_type = 10;
optional bytes timestamp = 11;
optional BBox2D003 box = 12;
}

message PerceptionObstacle003 {
optional uint64 id = 1;

optional common.Point3D position = 2;

optional bytes theta = 3;
optional common.Point3D velocity = 4;

optional string length = 5;
optional string width = 6;
optional double height = 7;

repeated common.Point3D polygon_point = 8;

optional bytes tracking_time = 9;

enum Type003 {
UNKNOWN = 0;
UNKNOWN_MOVABLE = 1;
UNKNOWN_UNMOVABLE = 2;
PEDESTRIAN = 3;
BICYCLE = 4;
VEHICLE = 5;
};
optional Type003 type = 10;
optional double timestamp = 11;

repeated bytes point_cloud = 12;

optional string confidence = 13 [deprecated = true];
enum ConfidenceType003 {
CONFIDENCE_UNKNOWN = 0;
CONFIDENCE_CNN = 1;
CONFIDENCE_RADAR = 2;
};
optional ConfidenceType003 confidence_type = 14 [deprecated = true];
repeated common.Point3D drops = 15 [deprecated = true];

optional common.Point3D acceleration = 16;

optional common.Point3D anchor_point = 17;
optional BBox2D003 bbox2d = 18;

enum SubType003 {
ST_UNKNOWN = 0;
ST_UNKNOWN_MOVABLE = 1;
ST_UNKNOWN_UNMOVABLE = 2;
ST_CAR = 3;
ST_VAN = 4;
ST_TRUCK = 5;
ST_BUS = 6;
ST_CYCLIST = 7;
ST_MOTORCYCLIST = 8;
ST_TRICYCLIST = 9;
ST_PEDESTRIAN = 10;
ST_TRAFFICCONE = 11;
};
optional SubType003 sub_type = 19;

repeated SensorMeasurement003 measurements = 20;

optional double height_above_ground = 21;

repeated double position_covariance = 22;
repeated bytes velocity_covariance = 23;
repeated double acceleration_covariance = 24;

optional LightStatus003 light_status = 25;
}

message LaneMarker003 {
optional apollo.hdmap.LaneBoundaryType.Type lane_type = 1;
optional double quality = 2;
optional float model_degree = 3;

optional bytes c0_position = 4;
optional string c1_heading_angle = 5;
optional string c2_curvature = 6;
optional string c3_curvature_derivative = 7;
optional double view_range = 8;
optional bytes longitude_start = 9;
optional string longitude_end = 10;
}

message LaneMarkers003 {
optional LaneMarker003 left_lane_marker = 1;
optional LaneMarker003 right_lane_marker = 2;
repeated LaneMarker003 next_left_lane_marker = 3;
repeated LaneMarker003 next_right_lane_marker = 4;
}

message CIPVInfo003 {
optional uint64 cipv_id = 1;
repeated double potential_cipv_id = 2;
}

message PerceptionObstacles003 {
repeated PerceptionObstacle003 perception_obstacle = 1;
optional common.Header header = 2;
optional common.ErrorCode error_code = 3;
optional LaneMarkers003 lane_marker = 4;
optional CIPVInfo003 cipv_info = 5;
}
message BBox2D004 {
optional bytes xmin = 1;
optional double ymin = 2;
optional string xmax = 3;
optional bytes ymax = 4;
}

message LightStatus004 {
optional string brake_visible = 1;
optional double brake_switch_on = 2;
optional string left_turn_visible = 3;
optional string left_turn_switch_on = 4;
optional string right_turn_visible = 5;
optional bytes right_turn_switch_on = 6;
}

message SensorMeasurement004 {
optional bytes sensor_id = 1;
optional double id = 2;

optional common.Point3D position = 3;
optional double theta = 4;
optional string length = 5;
optional double width = 6;
optional bytes height = 7;

optional common.Point3D velocity = 8;

optional PerceptionObstacle004.Type004 type = 9;
optional PerceptionObstacle004.SubType004 sub_type = 10;
optional bytes timestamp = 11;
optional BBox2D004 box = 12;
}

message PerceptionObstacle004 {
optional double id = 1;

optional common.Point3D position = 2;

optional string theta = 3;
optional common.Point3D velocity = 4;

optional bytes length = 5;
optional bytes width = 6;
optional double height = 7;

repeated common.Point3D polygon_point = 8;

optional string tracking_time = 9;

enum Type004 {
UNKNOWN = 0;
UNKNOWN_MOVABLE = 1;
UNKNOWN_UNMOVABLE = 2;
PEDESTRIAN = 3;
BICYCLE = 4;
VEHICLE = 5;
};
optional Type004 type = 10;
optional double timestamp = 11;

repeated string point_cloud = 12;

optional bytes confidence = 13 [deprecated = true];
enum ConfidenceType004 {
CONFIDENCE_UNKNOWN = 0;
CONFIDENCE_CNN = 1;
CONFIDENCE_RADAR = 2;
};
optional ConfidenceType004 confidence_type = 14 [deprecated = true];
repeated common.Point3D drops = 15 [deprecated = true];

optional common.Point3D acceleration = 16;

optional common.Point3D anchor_point = 17;
optional BBox2D004 bbox2d = 18;

enum SubType004 {
ST_UNKNOWN = 0;
ST_UNKNOWN_MOVABLE = 1;
ST_UNKNOWN_UNMOVABLE = 2;
ST_CAR = 3;
ST_VAN = 4;
ST_TRUCK = 5;
ST_BUS = 6;
ST_CYCLIST = 7;
ST_MOTORCYCLIST = 8;
ST_TRICYCLIST = 9;
ST_PEDESTRIAN = 10;
ST_TRAFFICCONE = 11;
};
optional SubType004 sub_type = 19;

repeated SensorMeasurement004 measurements = 20;

optional string height_above_ground = 21;

repeated string position_covariance = 22;
repeated bytes velocity_covariance = 23;
repeated string acceleration_covariance = 24;

optional LightStatus004 light_status = 25;
}

message LaneMarker004 {
optional apollo.hdmap.LaneBoundaryType.Type lane_type = 1;
optional double quality = 2;
optional int64 model_degree = 3;

optional bytes c0_position = 4;
optional double c1_heading_angle = 5;
optional string c2_curvature = 6;
optional string c3_curvature_derivative = 7;
optional double view_range = 8;
optional double longitude_start = 9;
optional double longitude_end = 10;
}

message LaneMarkers004 {
optional LaneMarker004 left_lane_marker = 1;
optional LaneMarker004 right_lane_marker = 2;
repeated LaneMarker004 next_left_lane_marker = 3;
repeated LaneMarker004 next_right_lane_marker = 4;
}

message CIPVInfo004 {
optional bytes cipv_id = 1;
repeated double potential_cipv_id = 2;
}

message PerceptionObstacles004 {
repeated PerceptionObstacle004 perception_obstacle = 1;
optional common.Header header = 2;
optional common.ErrorCode error_code = 3;
optional LaneMarkers004 lane_marker = 4;
optional CIPVInfo004 cipv_info = 5;
}
message BBox2D005 {
optional string xmin = 1;
optional double ymin = 2;
optional string xmax = 3;
optional bytes ymax = 4;
}

message LightStatus005 {
optional bytes brake_visible = 1;
optional string brake_switch_on = 2;
optional string left_turn_visible = 3;
optional double left_turn_switch_on = 4;
optional bytes right_turn_visible = 5;
optional double right_turn_switch_on = 6;
}

message SensorMeasurement005 {
optional string sensor_id = 1;
optional string id = 2;

optional common.Point3D position = 3;
optional string theta = 4;
optional string length = 5;
optional double width = 6;
optional bytes height = 7;

optional common.Point3D velocity = 8;

optional PerceptionObstacle005.Type005 type = 9;
optional PerceptionObstacle005.SubType005 sub_type = 10;
optional bytes timestamp = 11;
optional BBox2D005 box = 12;
}

message PerceptionObstacle005 {
optional bytes id = 1;

optional common.Point3D position = 2;

optional bytes theta = 3;
optional common.Point3D velocity = 4;

optional string length = 5;
optional double width = 6;
optional string height = 7;

repeated common.Point3D polygon_point = 8;

optional string tracking_time = 9;

enum Type005 {
UNKNOWN = 0;
UNKNOWN_MOVABLE = 1;
UNKNOWN_UNMOVABLE = 2;
PEDESTRIAN = 3;
BICYCLE = 4;
VEHICLE = 5;
};
optional Type005 type = 10;
optional double timestamp = 11;

repeated string point_cloud = 12;

optional string confidence = 13 [deprecated = true];
enum ConfidenceType005 {
CONFIDENCE_UNKNOWN = 0;
CONFIDENCE_CNN = 1;
CONFIDENCE_RADAR = 2;
};
optional ConfidenceType005 confidence_type = 14 [deprecated = true];
repeated common.Point3D drops = 15 [deprecated = true];

optional common.Point3D acceleration = 16;

optional common.Point3D anchor_point = 17;
optional BBox2D005 bbox2d = 18;

enum SubType005 {
ST_UNKNOWN = 0;
ST_UNKNOWN_MOVABLE = 1;
ST_UNKNOWN_UNMOVABLE = 2;
ST_CAR = 3;
ST_VAN = 4;
ST_TRUCK = 5;
ST_BUS = 6;
ST_CYCLIST = 7;
ST_MOTORCYCLIST = 8;
ST_TRICYCLIST = 9;
ST_PEDESTRIAN = 10;
ST_TRAFFICCONE = 11;
};
optional SubType005 sub_type = 19;

repeated SensorMeasurement005 measurements = 20;

optional string height_above_ground = 21;

repeated string position_covariance = 22;
repeated string velocity_covariance = 23;
repeated string acceleration_covariance = 24;

optional LightStatus005 light_status = 25;
}

message LaneMarker005 {
optional apollo.hdmap.LaneBoundaryType.Type lane_type = 1;
optional bytes quality = 2;
optional int64 model_degree = 3;

optional string c0_position = 4;
optional string c1_heading_angle = 5;
optional bytes c2_curvature = 6;
optional string c3_curvature_derivative = 7;
optional bytes view_range = 8;
optional string longitude_start = 9;
optional bytes longitude_end = 10;
}

message LaneMarkers005 {
optional LaneMarker005 left_lane_marker = 1;
optional LaneMarker005 right_lane_marker = 2;
repeated LaneMarker005 next_left_lane_marker = 3;
repeated LaneMarker005 next_right_lane_marker = 4;
}

message CIPVInfo005 {
optional double cipv_id = 1;
repeated double potential_cipv_id = 2;
}

message PerceptionObstacles005 {
repeated PerceptionObstacle005 perception_obstacle = 1;
optional common.Header header = 2;
optional common.ErrorCode error_code = 3;
optional LaneMarkers005 lane_marker = 4;
optional CIPVInfo005 cipv_info = 5;
}
message BBox2D006 {
optional string xmin = 1;
optional double ymin = 2;
optional bytes xmax = 3;
optional bytes ymax = 4;
}

message LightStatus006 {
optional double brake_visible = 1;
optional bytes brake_switch_on = 2;
optional bytes left_turn_visible = 3;
optional bytes left_turn_switch_on = 4;
optional string right_turn_visible = 5;
optional bytes right_turn_switch_on = 6;
}

message SensorMeasurement006 {
optional bytes sensor_id = 1;
optional bytes id = 2;

optional common.Point3D position = 3;
optional string theta = 4;
optional double length = 5;
optional string width = 6;
optional bytes height = 7;

optional common.Point3D velocity = 8;

optional PerceptionObstacle006.Type006 type = 9;
optional PerceptionObstacle006.SubType006 sub_type = 10;
optional string timestamp = 11;
optional BBox2D006 box = 12;
}

message PerceptionObstacle006 {
optional int64 id = 1;

optional common.Point3D position = 2;

optional string theta = 3;
optional common.Point3D velocity = 4;

optional double length = 5;
optional double width = 6;
optional string height = 7;

repeated common.Point3D polygon_point = 8;

optional double tracking_time = 9;

enum Type006 {
UNKNOWN = 0;
UNKNOWN_MOVABLE = 1;
UNKNOWN_UNMOVABLE = 2;
PEDESTRIAN = 3;
BICYCLE = 4;
VEHICLE = 5;
};
optional Type006 type = 10;
optional bytes timestamp = 11;

repeated string point_cloud = 12;

optional string confidence = 13 [deprecated = true];
enum ConfidenceType006 {
CONFIDENCE_UNKNOWN = 0;
CONFIDENCE_CNN = 1;
CONFIDENCE_RADAR = 2;
};
optional ConfidenceType006 confidence_type = 14 [deprecated = true];
repeated common.Point3D drops = 15 [deprecated = true];

optional common.Point3D acceleration = 16;

optional common.Point3D anchor_point = 17;
optional BBox2D006 bbox2d = 18;

enum SubType006 {
ST_UNKNOWN = 0;
ST_UNKNOWN_MOVABLE = 1;
ST_UNKNOWN_UNMOVABLE = 2;
ST_CAR = 3;
ST_VAN = 4;
ST_TRUCK = 5;
ST_BUS = 6;
ST_CYCLIST = 7;
ST_MOTORCYCLIST = 8;
ST_TRICYCLIST = 9;
ST_PEDESTRIAN = 10;
ST_TRAFFICCONE = 11;
};
optional SubType006 sub_type = 19;

repeated SensorMeasurement006 measurements = 20;

optional string height_above_ground = 21;

repeated double position_covariance = 22;
repeated double velocity_covariance = 23;
repeated string acceleration_covariance = 24;

optional LightStatus006 light_status = 25;
}

message LaneMarker006 {
optional apollo.hdmap.LaneBoundaryType.Type lane_type = 1;
optional double quality = 2;
optional int32 model_degree = 3;

optional double c0_position = 4;
optional bytes c1_heading_angle = 5;
optional double c2_curvature = 6;
optional double c3_curvature_derivative = 7;
optional string view_range = 8;
optional string longitude_start = 9;
optional double longitude_end = 10;
}

message LaneMarkers006 {
optional LaneMarker006 left_lane_marker = 1;
optional LaneMarker006 right_lane_marker = 2;
repeated LaneMarker006 next_left_lane_marker = 3;
repeated LaneMarker006 next_right_lane_marker = 4;
}

message CIPVInfo006 {
optional uint64 cipv_id = 1;
repeated uint64 potential_cipv_id = 2;
}

message PerceptionObstacles006 {
repeated PerceptionObstacle006 perception_obstacle = 1;
optional common.Header header = 2;
optional common.ErrorCode error_code = 3;
optional LaneMarkers006 lane_marker = 4;
optional CIPVInfo006 cipv_info = 5;
}
message BBox2D007 {
optional double xmin = 1;
optional string ymin = 2;
optional string xmax = 3;
optional string ymax = 4;
}

message LightStatus007 {
optional bytes brake_visible = 1;
optional string brake_switch_on = 2;
optional string left_turn_visible = 3;
optional double left_turn_switch_on = 4;
optional bytes right_turn_visible = 5;
optional string right_turn_switch_on = 6;
}

message SensorMeasurement007 {
optional string sensor_id = 1;
optional int64 id = 2;

optional common.Point3D position = 3;
optional bytes theta = 4;
optional double length = 5;
optional double width = 6;
optional string height = 7;

optional common.Point3D velocity = 8;

optional PerceptionObstacle007.Type007 type = 9;
optional PerceptionObstacle007.SubType007 sub_type = 10;
optional bytes timestamp = 11;
optional BBox2D007 box = 12;
}

message PerceptionObstacle007 {
optional int32 id = 1;

optional common.Point3D position = 2;

optional bytes theta = 3;
optional common.Point3D velocity = 4;

optional bytes length = 5;
optional double width = 6;
optional double height = 7;

repeated common.Point3D polygon_point = 8;

optional bytes tracking_time = 9;

enum Type007 {
UNKNOWN = 0;
UNKNOWN_MOVABLE = 1;
UNKNOWN_UNMOVABLE = 2;
PEDESTRIAN = 3;
BICYCLE = 4;
VEHICLE = 5;
};
optional Type007 type = 10;
optional string timestamp = 11;

repeated string point_cloud = 12;

optional double confidence = 13 [deprecated = true];
enum ConfidenceType007 {
CONFIDENCE_UNKNOWN = 0;
CONFIDENCE_CNN = 1;
CONFIDENCE_RADAR = 2;
};
optional ConfidenceType007 confidence_type = 14 [deprecated = true];
repeated common.Point3D drops = 15 [deprecated = true];

optional common.Point3D acceleration = 16;

optional common.Point3D anchor_point = 17;
optional BBox2D007 bbox2d = 18;

enum SubType007 {
ST_UNKNOWN = 0;
ST_UNKNOWN_MOVABLE = 1;
ST_UNKNOWN_UNMOVABLE = 2;
ST_CAR = 3;
ST_VAN = 4;
ST_TRUCK = 5;
ST_BUS = 6;
ST_CYCLIST = 7;
ST_MOTORCYCLIST = 8;
ST_TRICYCLIST = 9;
ST_PEDESTRIAN = 10;
ST_TRAFFICCONE = 11;
};
optional SubType007 sub_type = 19;

repeated SensorMeasurement007 measurements = 20;

optional double height_above_ground = 21;

repeated bytes position_covariance = 22;
repeated string velocity_covariance = 23;
repeated string acceleration_covariance = 24;

optional LightStatus007 light_status = 25;
}

message LaneMarker007 {
optional apollo.hdmap.LaneBoundaryType.Type lane_type = 1;
optional double quality = 2;
optional int32 model_degree = 3;

optional bytes c0_position = 4;
optional string c1_heading_angle = 5;
optional string c2_curvature = 6;
optional bytes c3_curvature_derivative = 7;
optional double view_range = 8;
optional double longitude_start = 9;
optional double longitude_end = 10;
}

message LaneMarkers007 {
optional LaneMarker007 left_lane_marker = 1;
optional LaneMarker007 right_lane_marker = 2;
repeated LaneMarker007 next_left_lane_marker = 3;
repeated LaneMarker007 next_right_lane_marker = 4;
}

message CIPVInfo007 {
optional float cipv_id = 1;
repeated uint32 potential_cipv_id = 2;
}

message PerceptionObstacles007 {
repeated PerceptionObstacle007 perception_obstacle = 1;
optional common.Header header = 2;
optional common.ErrorCode error_code = 3;
optional LaneMarkers007 lane_marker = 4;
optional CIPVInfo007 cipv_info = 5;
}
message BBox2D008 {
optional bytes xmin = 1;
optional double ymin = 2;
optional bytes xmax = 3;
optional double ymax = 4;
}

message LightStatus008 {
optional string brake_visible = 1;
optional double brake_switch_on = 2;
optional bytes left_turn_visible = 3;
optional bytes left_turn_switch_on = 4;
optional double right_turn_visible = 5;
optional bytes right_turn_switch_on = 6;
}

message SensorMeasurement008 {
optional bytes sensor_id = 1;
optional bytes id = 2;

optional common.Point3D position = 3;
optional string theta = 4;
optional string length = 5;
optional double width = 6;
optional bytes height = 7;

optional common.Point3D velocity = 8;

optional PerceptionObstacle008.Type008 type = 9;
optional PerceptionObstacle008.SubType008 sub_type = 10;
optional double timestamp = 11;
optional BBox2D008 box = 12;
}

message PerceptionObstacle008 {
optional double id = 1;

optional common.Point3D position = 2;

optional string theta = 3;
optional common.Point3D velocity = 4;

optional string length = 5;
optional double width = 6;
optional double height = 7;

repeated common.Point3D polygon_point = 8;

optional string tracking_time = 9;

enum Type008 {
UNKNOWN = 0;
UNKNOWN_MOVABLE = 1;
UNKNOWN_UNMOVABLE = 2;
PEDESTRIAN = 3;
BICYCLE = 4;
VEHICLE = 5;
};
optional Type008 type = 10;
optional bytes timestamp = 11;

repeated bytes point_cloud = 12;

optional string confidence = 13 [deprecated = true];
enum ConfidenceType008 {
CONFIDENCE_UNKNOWN = 0;
CONFIDENCE_CNN = 1;
CONFIDENCE_RADAR = 2;
};
optional ConfidenceType008 confidence_type = 14 [deprecated = true];
repeated common.Point3D drops = 15 [deprecated = true];

optional common.Point3D acceleration = 16;

optional common.Point3D anchor_point = 17;
optional BBox2D008 bbox2d = 18;

enum SubType008 {
ST_UNKNOWN = 0;
ST_UNKNOWN_MOVABLE = 1;
ST_UNKNOWN_UNMOVABLE = 2;
ST_CAR = 3;
ST_VAN = 4;
ST_TRUCK = 5;
ST_BUS = 6;
ST_CYCLIST = 7;
ST_MOTORCYCLIST = 8;
ST_TRICYCLIST = 9;
ST_PEDESTRIAN = 10;
ST_TRAFFICCONE = 11;
};
optional SubType008 sub_type = 19;

repeated SensorMeasurement008 measurements = 20;

optional double height_above_ground = 21;

repeated double position_covariance = 22;
repeated bytes velocity_covariance = 23;
repeated bytes acceleration_covariance = 24;

optional LightStatus008 light_status = 25;
}

message LaneMarker008 {
optional apollo.hdmap.LaneBoundaryType.Type lane_type = 1;
optional double quality = 2;
optional string model_degree = 3;

optional double c0_position = 4;
optional bytes c1_heading_angle = 5;
optional string c2_curvature = 6;
optional string c3_curvature_derivative = 7;
optional double view_range = 8;
optional bytes longitude_start = 9;
optional double longitude_end = 10;
}

message LaneMarkers008 {
optional LaneMarker008 left_lane_marker = 1;
optional LaneMarker008 right_lane_marker = 2;
repeated LaneMarker008 next_left_lane_marker = 3;
repeated LaneMarker008 next_right_lane_marker = 4;
}

message CIPVInfo008 {
optional float cipv_id = 1;
repeated uint64 potential_cipv_id = 2;
}

message PerceptionObstacles008 {
repeated PerceptionObstacle008 perception_obstacle = 1;
optional common.Header header = 2;
optional common.ErrorCode error_code = 3;
optional LaneMarkers008 lane_marker = 4;
optional CIPVInfo008 cipv_info = 5;
}
message BBox2D009 {
optional string xmin = 1;
optional double ymin = 2;
optional string xmax = 3;
optional double ymax = 4;
}

message LightStatus009 {
optional double brake_visible = 1;
optional string brake_switch_on = 2;
optional double left_turn_visible = 3;
optional double left_turn_switch_on = 4;
optional double right_turn_visible = 5;
optional bytes right_turn_switch_on = 6;
}

message SensorMeasurement009 {
optional bytes sensor_id = 1;
optional double id = 2;

optional common.Point3D position = 3;
optional string theta = 4;
optional double length = 5;
optional string width = 6;
optional bytes height = 7;

optional common.Point3D velocity = 8;

optional PerceptionObstacle009.Type009 type = 9;
optional PerceptionObstacle009.SubType009 sub_type = 10;
optional string timestamp = 11;
optional BBox2D009 box = 12;
}

message PerceptionObstacle009 {
optional float id = 1;

optional common.Point3D position = 2;

optional bytes theta = 3;
optional common.Point3D velocity = 4;

optional string length = 5;
optional bytes width = 6;
optional string height = 7;

repeated common.Point3D polygon_point = 8;

optional string tracking_time = 9;

enum Type009 {
UNKNOWN = 0;
UNKNOWN_MOVABLE = 1;
UNKNOWN_UNMOVABLE = 2;
PEDESTRIAN = 3;
BICYCLE = 4;
VEHICLE = 5;
};
optional Type009 type = 10;
optional bytes timestamp = 11;

repeated double point_cloud = 12;

optional double confidence = 13 [deprecated = true];
enum ConfidenceType009 {
CONFIDENCE_UNKNOWN = 0;
CONFIDENCE_CNN = 1;
CONFIDENCE_RADAR = 2;
};
optional ConfidenceType009 confidence_type = 14 [deprecated = true];
repeated common.Point3D drops = 15 [deprecated = true];

optional common.Point3D acceleration = 16;

optional common.Point3D anchor_point = 17;
optional BBox2D009 bbox2d = 18;

enum SubType009 {
ST_UNKNOWN = 0;
ST_UNKNOWN_MOVABLE = 1;
ST_UNKNOWN_UNMOVABLE = 2;
ST_CAR = 3;
ST_VAN = 4;
ST_TRUCK = 5;
ST_BUS = 6;
ST_CYCLIST = 7;
ST_MOTORCYCLIST = 8;
ST_TRICYCLIST = 9;
ST_PEDESTRIAN = 10;
ST_TRAFFICCONE = 11;
};
optional SubType009 sub_type = 19;

repeated SensorMeasurement009 measurements = 20;

optional double height_above_ground = 21;

repeated double position_covariance = 22;
repeated string velocity_covariance = 23;
repeated bytes acceleration_covariance = 24;

optional LightStatus009 light_status = 25;
}

message LaneMarker009 {
optional apollo.hdmap.LaneBoundaryType.Type lane_type = 1;
optional bytes quality = 2;
optional bytes model_degree = 3;

optional bytes c0_position = 4;
optional double c1_heading_angle = 5;
optional double c2_curvature = 6;
optional string c3_curvature_derivative = 7;
optional bytes view_range = 8;
optional string longitude_start = 9;
optional string longitude_end = 10;
}

message LaneMarkers009 {
optional LaneMarker009 left_lane_marker = 1;
optional LaneMarker009 right_lane_marker = 2;
repeated LaneMarker009 next_left_lane_marker = 3;
repeated LaneMarker009 next_right_lane_marker = 4;
}

message CIPVInfo009 {
optional string cipv_id = 1;
repeated double potential_cipv_id = 2;
}

message PerceptionObstacles009 {
repeated PerceptionObstacle009 perception_obstacle = 1;
optional common.Header header = 2;
optional common.ErrorCode error_code = 3;
optional LaneMarkers009 lane_marker = 4;
optional CIPVInfo009 cipv_info = 5;
}
message BBox2D010 {
optional double xmin = 1;
optional string ymin = 2;
optional string xmax = 3;
optional string ymax = 4;
}

message LightStatus010 {
optional double brake_visible = 1;
optional bytes brake_switch_on = 2;
optional double left_turn_visible = 3;
optional bytes left_turn_switch_on = 4;
optional string right_turn_visible = 5;
optional string right_turn_switch_on = 6;
}

message SensorMeasurement010 {
optional bytes sensor_id = 1;
optional int64 id = 2;

optional common.Point3D position = 3;
optional double theta = 4;
optional double length = 5;
optional double width = 6;
optional double height = 7;

optional common.Point3D velocity = 8;

optional PerceptionObstacle010.Type010 type = 9;
optional PerceptionObstacle010.SubType010 sub_type = 10;
optional string timestamp = 11;
optional BBox2D010 box = 12;
}

message PerceptionObstacle010 {
optional string id = 1;

optional common.Point3D position = 2;

optional string theta = 3;
optional common.Point3D velocity = 4;

optional string length = 5;
optional string width = 6;
optional string height = 7;

repeated common.Point3D polygon_point = 8;

optional string tracking_time = 9;

enum Type010 {
UNKNOWN = 0;
UNKNOWN_MOVABLE = 1;
UNKNOWN_UNMOVABLE = 2;
PEDESTRIAN = 3;
BICYCLE = 4;
VEHICLE = 5;
};
optional Type010 type = 10;
optional bytes timestamp = 11;

repeated bytes point_cloud = 12;

optional bytes confidence = 13 [deprecated = true];
enum ConfidenceType010 {
CONFIDENCE_UNKNOWN = 0;
CONFIDENCE_CNN = 1;
CONFIDENCE_RADAR = 2;
};
optional ConfidenceType010 confidence_type = 14 [deprecated = true];
repeated common.Point3D drops = 15 [deprecated = true];

optional common.Point3D acceleration = 16;

optional common.Point3D anchor_point = 17;
optional BBox2D010 bbox2d = 18;

enum SubType010 {
ST_UNKNOWN = 0;
ST_UNKNOWN_MOVABLE = 1;
ST_UNKNOWN_UNMOVABLE = 2;
ST_CAR = 3;
ST_VAN = 4;
ST_TRUCK = 5;
ST_BUS = 6;
ST_CYCLIST = 7;
ST_MOTORCYCLIST = 8;
ST_TRICYCLIST = 9;
ST_PEDESTRIAN = 10;
ST_TRAFFICCONE = 11;
};
optional SubType010 sub_type = 19;

repeated SensorMeasurement010 measurements = 20;

optional bytes height_above_ground = 21;

repeated double position_covariance = 22;
repeated bytes velocity_covariance = 23;
repeated bytes acceleration_covariance = 24;

optional LightStatus010 light_status = 25;
}

message LaneMarker010 {
optional apollo.hdmap.LaneBoundaryType.Type lane_type = 1;
optional string quality = 2;
optional int32 model_degree = 3;

optional string c0_position = 4;
optional double c1_heading_angle = 5;
optional string c2_curvature = 6;
optional string c3_curvature_derivative = 7;
optional bytes view_range = 8;
optional string longitude_start = 9;
optional bytes longitude_end = 10;
}

message LaneMarkers010 {
optional LaneMarker010 left_lane_marker = 1;
optional LaneMarker010 right_lane_marker = 2;
repeated LaneMarker010 next_left_lane_marker = 3;
repeated LaneMarker010 next_right_lane_marker = 4;
}

message CIPVInfo010 {
optional string cipv_id = 1;
repeated double potential_cipv_id = 2;
}

message PerceptionObstacles010 {
repeated PerceptionObstacle010 perception_obstacle = 1;
optional common.Header header = 2;
optional common.ErrorCode error_code = 3;
optional LaneMarkers010 lane_marker = 4;
optional CIPVInfo010 cipv_info = 5;
}
message BBox2D011 {
optional double xmin = 1;
optional string ymin = 2;
optional double xmax = 3;
optional double ymax = 4;
}

message LightStatus011 {
optional bytes brake_visible = 1;
optional string brake_switch_on = 2;
optional bytes left_turn_visible = 3;
optional string left_turn_switch_on = 4;
optional double right_turn_visible = 5;
optional double right_turn_switch_on = 6;
}

message SensorMeasurement011 {
optional string sensor_id = 1;
optional float id = 2;

optional common.Point3D position = 3;
optional bytes theta = 4;
optional bytes length = 5;
optional double width = 6;
optional bytes height = 7;

optional common.Point3D velocity = 8;

optional PerceptionObstacle011.Type011 type = 9;
optional PerceptionObstacle011.SubType011 sub_type = 10;
optional string timestamp = 11;
optional BBox2D011 box = 12;
}

message PerceptionObstacle011 {
optional double id = 1;

optional common.Point3D position = 2;

optional string theta = 3;
optional common.Point3D velocity = 4;

optional bytes length = 5;
optional double width = 6;
optional string height = 7;

repeated common.Point3D polygon_point = 8;

optional double tracking_time = 9;

enum Type011 {
UNKNOWN = 0;
UNKNOWN_MOVABLE = 1;
UNKNOWN_UNMOVABLE = 2;
PEDESTRIAN = 3;
BICYCLE = 4;
VEHICLE = 5;
};
optional Type011 type = 10;
optional string timestamp = 11;

repeated bytes point_cloud = 12;

optional double confidence = 13 [deprecated = true];
enum ConfidenceType011 {
CONFIDENCE_UNKNOWN = 0;
CONFIDENCE_CNN = 1;
CONFIDENCE_RADAR = 2;
};
optional ConfidenceType011 confidence_type = 14 [deprecated = true];
repeated common.Point3D drops = 15 [deprecated = true];

optional common.Point3D acceleration = 16;

optional common.Point3D anchor_point = 17;
optional BBox2D011 bbox2d = 18;

enum SubType011 {
ST_UNKNOWN = 0;
ST_UNKNOWN_MOVABLE = 1;
ST_UNKNOWN_UNMOVABLE = 2;
ST_CAR = 3;
ST_VAN = 4;
ST_TRUCK = 5;
ST_BUS = 6;
ST_CYCLIST = 7;
ST_MOTORCYCLIST = 8;
ST_TRICYCLIST = 9;
ST_PEDESTRIAN = 10;
ST_TRAFFICCONE = 11;
};
optional SubType011 sub_type = 19;

repeated SensorMeasurement011 measurements = 20;

optional string height_above_ground = 21;

repeated string position_covariance = 22;
repeated bytes velocity_covariance = 23;
repeated double acceleration_covariance = 24;

optional LightStatus011 light_status = 25;
}

message LaneMarker011 {
optional apollo.hdmap.LaneBoundaryType.Type lane_type = 1;
optional bytes quality = 2;
optional int32 model_degree = 3;

optional string c0_position = 4;
optional double c1_heading_angle = 5;
optional double c2_curvature = 6;
optional bytes c3_curvature_derivative = 7;
optional string view_range = 8;
optional double longitude_start = 9;
optional double longitude_end = 10;
}

message LaneMarkers011 {
optional LaneMarker011 left_lane_marker = 1;
optional LaneMarker011 right_lane_marker = 2;
repeated LaneMarker011 next_left_lane_marker = 3;
repeated LaneMarker011 next_right_lane_marker = 4;
}

message CIPVInfo011 {
optional bytes cipv_id = 1;
repeated double potential_cipv_id = 2;
}

message PerceptionObstacles011 {
repeated PerceptionObstacle011 perception_obstacle = 1;
optional common.Header header = 2;
optional common.ErrorCode error_code = 3;
optional LaneMarkers011 lane_marker = 4;
optional CIPVInfo011 cipv_info = 5;
}
message BBox2D012 {
optional double xmin = 1;
optional bytes ymin = 2;
optional double xmax = 3;
optional bytes ymax = 4;
}

message LightStatus012 {
optional bytes brake_visible = 1;
optional string brake_switch_on = 2;
optional string left_turn_visible = 3;
optional bytes left_turn_switch_on = 4;
optional bytes right_turn_visible = 5;
optional string right_turn_switch_on = 6;
}

message SensorMeasurement012 {
optional string sensor_id = 1;
optional string id = 2;

optional common.Point3D position = 3;
optional string theta = 4;
optional bytes length = 5;
optional bytes width = 6;
optional string height = 7;

optional common.Point3D velocity = 8;

optional PerceptionObstacle012.Type012 type = 9;
optional PerceptionObstacle012.SubType012 sub_type = 10;
optional string timestamp = 11;
optional BBox2D012 box = 12;
}

message PerceptionObstacle012 {
optional double id = 1;

optional common.Point3D position = 2;

optional string theta = 3;
optional common.Point3D velocity = 4;

optional string length = 5;
optional string width = 6;
optional string height = 7;

repeated common.Point3D polygon_point = 8;

optional string tracking_time = 9;

enum Type012 {
UNKNOWN = 0;
UNKNOWN_MOVABLE = 1;
UNKNOWN_UNMOVABLE = 2;
PEDESTRIAN = 3;
BICYCLE = 4;
VEHICLE = 5;
};
optional Type012 type = 10;
optional bytes timestamp = 11;

repeated double point_cloud = 12;

optional double confidence = 13 [deprecated = true];
enum ConfidenceType012 {
CONFIDENCE_UNKNOWN = 0;
CONFIDENCE_CNN = 1;
CONFIDENCE_RADAR = 2;
};
optional ConfidenceType012 confidence_type = 14 [deprecated = true];
repeated common.Point3D drops = 15 [deprecated = true];

optional common.Point3D acceleration = 16;

optional common.Point3D anchor_point = 17;
optional BBox2D012 bbox2d = 18;

enum SubType012 {
ST_UNKNOWN = 0;
ST_UNKNOWN_MOVABLE = 1;
ST_UNKNOWN_UNMOVABLE = 2;
ST_CAR = 3;
ST_VAN = 4;
ST_TRUCK = 5;
ST_BUS = 6;
ST_CYCLIST = 7;
ST_MOTORCYCLIST = 8;
ST_TRICYCLIST = 9;
ST_PEDESTRIAN = 10;
ST_TRAFFICCONE = 11;
};
optional SubType012 sub_type = 19;

repeated SensorMeasurement012 measurements = 20;

optional string height_above_ground = 21;

repeated string position_covariance = 22;
repeated double velocity_covariance = 23;
repeated string acceleration_covariance = 24;

optional LightStatus012 light_status = 25;
}

message LaneMarker012 {
optional apollo.hdmap.LaneBoundaryType.Type lane_type = 1;
optional bytes quality = 2;
optional uint64 model_degree = 3;

optional double c0_position = 4;
optional string c1_heading_angle = 5;
optional bytes c2_curvature = 6;
optional double c3_curvature_derivative = 7;
optional bytes view_range = 8;
optional string longitude_start = 9;
optional double longitude_end = 10;
}

message LaneMarkers012 {
optional LaneMarker012 left_lane_marker = 1;
optional LaneMarker012 right_lane_marker = 2;
repeated LaneMarker012 next_left_lane_marker = 3;
repeated LaneMarker012 next_right_lane_marker = 4;
}

message CIPVInfo012 {
optional int32 cipv_id = 1;
repeated uint32 potential_cipv_id = 2;
}

message PerceptionObstacles012 {
repeated PerceptionObstacle012 perception_obstacle = 1;
optional common.Header header = 2;
optional common.ErrorCode error_code = 3;
optional LaneMarkers012 lane_marker = 4;
optional CIPVInfo012 cipv_info = 5;
}
message BBox2D013 {
optional double xmin = 1;
optional bytes ymin = 2;
optional bytes xmax = 3;
optional double ymax = 4;
}

message LightStatus013 {
optional bytes brake_visible = 1;
optional string brake_switch_on = 2;
optional string left_turn_visible = 3;
optional string left_turn_switch_on = 4;
optional double right_turn_visible = 5;
optional string right_turn_switch_on = 6;
}

message SensorMeasurement013 {
optional string sensor_id = 1;
optional float id = 2;

optional common.Point3D position = 3;
optional bytes theta = 4;
optional bytes length = 5;
optional bytes width = 6;
optional bytes height = 7;

optional common.Point3D velocity = 8;

optional PerceptionObstacle013.Type013 type = 9;
optional PerceptionObstacle013.SubType013 sub_type = 10;
optional string timestamp = 11;
optional BBox2D013 box = 12;
}

message PerceptionObstacle013 {
optional float id = 1;

optional common.Point3D position = 2;

optional double theta = 3;
optional common.Point3D velocity = 4;

optional double length = 5;
optional string width = 6;
optional string height = 7;

repeated common.Point3D polygon_point = 8;

optional double tracking_time = 9;

enum Type013 {
UNKNOWN = 0;
UNKNOWN_MOVABLE = 1;
UNKNOWN_UNMOVABLE = 2;
PEDESTRIAN = 3;
BICYCLE = 4;
VEHICLE = 5;
};
optional Type013 type = 10;
optional bytes timestamp = 11;

repeated double point_cloud = 12;

optional string confidence = 13 [deprecated = true];
enum ConfidenceType013 {
CONFIDENCE_UNKNOWN = 0;
CONFIDENCE_CNN = 1;
CONFIDENCE_RADAR = 2;
};
optional ConfidenceType013 confidence_type = 14 [deprecated = true];
repeated common.Point3D drops = 15 [deprecated = true];

optional common.Point3D acceleration = 16;

optional common.Point3D anchor_point = 17;
optional BBox2D013 bbox2d = 18;

enum SubType013 {
ST_UNKNOWN = 0;
ST_UNKNOWN_MOVABLE = 1;
ST_UNKNOWN_UNMOVABLE = 2;
ST_CAR = 3;
ST_VAN = 4;
ST_TRUCK = 5;
ST_BUS = 6;
ST_CYCLIST = 7;
ST_MOTORCYCLIST = 8;
ST_TRICYCLIST = 9;
ST_PEDESTRIAN = 10;
ST_TRAFFICCONE = 11;
};
optional SubType013 sub_type = 19;

repeated SensorMeasurement013 measurements = 20;

optional bytes height_above_ground = 21;

repeated double position_covariance = 22;
repeated bytes velocity_covariance = 23;
repeated string acceleration_covariance = 24;

optional LightStatus013 light_status = 25;
}

message LaneMarker013 {
optional apollo.hdmap.LaneBoundaryType.Type lane_type = 1;
optional double quality = 2;
optional float model_degree = 3;

optional string c0_position = 4;
optional bytes c1_heading_angle = 5;
optional string c2_curvature = 6;
optional string c3_curvature_derivative = 7;
optional bytes view_range = 8;
optional string longitude_start = 9;
optional bytes longitude_end = 10;
}

message LaneMarkers013 {
optional LaneMarker013 left_lane_marker = 1;
optional LaneMarker013 right_lane_marker = 2;
repeated LaneMarker013 next_left_lane_marker = 3;
repeated LaneMarker013 next_right_lane_marker = 4;
}

message CIPVInfo013 {
optional int32 cipv_id = 1;
repeated float potential_cipv_id = 2;
}

message PerceptionObstacles013 {
repeated PerceptionObstacle013 perception_obstacle = 1;
optional common.Header header = 2;
optional common.ErrorCode error_code = 3;
optional LaneMarkers013 lane_marker = 4;
optional CIPVInfo013 cipv_info = 5;
}
message BBox2D014 {
optional bytes xmin = 1;
optional bytes ymin = 2;
optional bytes xmax = 3;
optional double ymax = 4;
}

message LightStatus014 {
optional double brake_visible = 1;
optional bytes brake_switch_on = 2;
optional string left_turn_visible = 3;
optional double left_turn_switch_on = 4;
optional bytes right_turn_visible = 5;
optional bytes right_turn_switch_on = 6;
}

message SensorMeasurement014 {
optional bytes sensor_id = 1;
optional int64 id = 2;

optional common.Point3D position = 3;
optional double theta = 4;
optional string length = 5;
optional string width = 6;
optional string height = 7;

optional common.Point3D velocity = 8;

optional PerceptionObstacle014.Type014 type = 9;
optional PerceptionObstacle014.SubType014 sub_type = 10;
optional double timestamp = 11;
optional BBox2D014 box = 12;
}

message PerceptionObstacle014 {
optional uint64 id = 1;

optional common.Point3D position = 2;

optional string theta = 3;
optional common.Point3D velocity = 4;

optional bytes length = 5;
optional string width = 6;
optional bytes height = 7;

repeated common.Point3D polygon_point = 8;

optional string tracking_time = 9;

enum Type014 {
UNKNOWN = 0;
UNKNOWN_MOVABLE = 1;
UNKNOWN_UNMOVABLE = 2;
PEDESTRIAN = 3;
BICYCLE = 4;
VEHICLE = 5;
};
optional Type014 type = 10;
optional string timestamp = 11;

repeated double point_cloud = 12;

optional bytes confidence = 13 [deprecated = true];
enum ConfidenceType014 {
CONFIDENCE_UNKNOWN = 0;
CONFIDENCE_CNN = 1;
CONFIDENCE_RADAR = 2;
};
optional ConfidenceType014 confidence_type = 14 [deprecated = true];
repeated common.Point3D drops = 15 [deprecated = true];

optional common.Point3D acceleration = 16;

optional common.Point3D anchor_point = 17;
optional BBox2D014 bbox2d = 18;

enum SubType014 {
ST_UNKNOWN = 0;
ST_UNKNOWN_MOVABLE = 1;
ST_UNKNOWN_UNMOVABLE = 2;
ST_CAR = 3;
ST_VAN = 4;
ST_TRUCK = 5;
ST_BUS = 6;
ST_CYCLIST = 7;
ST_MOTORCYCLIST = 8;
ST_TRICYCLIST = 9;
ST_PEDESTRIAN = 10;
ST_TRAFFICCONE = 11;
};
optional SubType014 sub_type = 19;

repeated SensorMeasurement014 measurements = 20;

optional double height_above_ground = 21;

repeated string position_covariance = 22;
repeated bytes velocity_covariance = 23;
repeated double acceleration_covariance = 24;

optional LightStatus014 light_status = 25;
}

message LaneMarker014 {
optional apollo.hdmap.LaneBoundaryType.Type lane_type = 1;
optional string quality = 2;
optional int32 model_degree = 3;

optional double c0_position = 4;
optional double c1_heading_angle = 5;
optional bytes c2_curvature = 6;
optional double c3_curvature_derivative = 7;
optional bytes view_range = 8;
optional string longitude_start = 9;
optional string longitude_end = 10;
}

message LaneMarkers014 {
optional LaneMarker014 left_lane_marker = 1;
optional LaneMarker014 right_lane_marker = 2;
repeated LaneMarker014 next_left_lane_marker = 3;
repeated LaneMarker014 next_right_lane_marker = 4;
}

message CIPVInfo014 {
optional bytes cipv_id = 1;
repeated string potential_cipv_id = 2;
}

message PerceptionObstacles014 {
repeated PerceptionObstacle014 perception_obstacle = 1;
optional common.Header header = 2;
optional common.ErrorCode error_code = 3;
optional LaneMarkers014 lane_marker = 4;
optional CIPVInfo014 cipv_info = 5;
}
message BBox2D015 {
optional string xmin = 1;
optional bytes ymin = 2;
optional double xmax = 3;
optional bytes ymax = 4;
}

message LightStatus015 {
optional bytes brake_visible = 1;
optional double brake_switch_on = 2;
optional string left_turn_visible = 3;
optional bytes left_turn_switch_on = 4;
optional bytes right_turn_visible = 5;
optional double right_turn_switch_on = 6;
}

message SensorMeasurement015 {
optional bytes sensor_id = 1;
optional float id = 2;

optional common.Point3D position = 3;
optional bytes theta = 4;
optional bytes length = 5;
optional bytes width = 6;
optional bytes height = 7;

optional common.Point3D velocity = 8;

optional PerceptionObstacle015.Type015 type = 9;
optional PerceptionObstacle015.SubType015 sub_type = 10;
optional bytes timestamp = 11;
optional BBox2D015 box = 12;
}

message PerceptionObstacle015 {
optional int32 id = 1;

optional common.Point3D position = 2;

optional string theta = 3;
optional common.Point3D velocity = 4;

optional double length = 5;
optional double width = 6;
optional string height = 7;

repeated common.Point3D polygon_point = 8;

optional string tracking_time = 9;

enum Type015 {
UNKNOWN = 0;
UNKNOWN_MOVABLE = 1;
UNKNOWN_UNMOVABLE = 2;
PEDESTRIAN = 3;
BICYCLE = 4;
VEHICLE = 5;
};
optional Type015 type = 10;
optional string timestamp = 11;

repeated string point_cloud = 12;

optional string confidence = 13 [deprecated = true];
enum ConfidenceType015 {
CONFIDENCE_UNKNOWN = 0;
CONFIDENCE_CNN = 1;
CONFIDENCE_RADAR = 2;
};
optional ConfidenceType015 confidence_type = 14 [deprecated = true];
repeated common.Point3D drops = 15 [deprecated = true];

optional common.Point3D acceleration = 16;

optional common.Point3D anchor_point = 17;
optional BBox2D015 bbox2d = 18;

enum SubType015 {
ST_UNKNOWN = 0;
ST_UNKNOWN_MOVABLE = 1;
ST_UNKNOWN_UNMOVABLE = 2;
ST_CAR = 3;
ST_VAN = 4;
ST_TRUCK = 5;
ST_BUS = 6;
ST_CYCLIST = 7;
ST_MOTORCYCLIST = 8;
ST_TRICYCLIST = 9;
ST_PEDESTRIAN = 10;
ST_TRAFFICCONE = 11;
};
optional SubType015 sub_type = 19;

repeated SensorMeasurement015 measurements = 20;

optional double height_above_ground = 21;

repeated double position_covariance = 22;
repeated bytes velocity_covariance = 23;
repeated string acceleration_covariance = 24;

optional LightStatus015 light_status = 25;
}

message LaneMarker015 {
optional apollo.hdmap.LaneBoundaryType.Type lane_type = 1;
optional bytes quality = 2;
optional uint32 model_degree = 3;

optional double c0_position = 4;
optional double c1_heading_angle = 5;
optional string c2_curvature = 6;
optional double c3_curvature_derivative = 7;
optional double view_range = 8;
optional bytes longitude_start = 9;
optional double longitude_end = 10;
}

message LaneMarkers015 {
optional LaneMarker015 left_lane_marker = 1;
optional LaneMarker015 right_lane_marker = 2;
repeated LaneMarker015 next_left_lane_marker = 3;
repeated LaneMarker015 next_right_lane_marker = 4;
}

message CIPVInfo015 {
optional double cipv_id = 1;
repeated uint64 potential_cipv_id = 2;
}

message PerceptionObstacles015 {
repeated PerceptionObstacle015 perception_obstacle = 1;
optional common.Header header = 2;
optional common.ErrorCode error_code = 3;
optional LaneMarkers015 lane_marker = 4;
optional CIPVInfo015 cipv_info = 5;
}
message BBox2D016 {
optional string xmin = 1;
optional string ymin = 2;
optional double xmax = 3;
optional double ymax = 4;
}

message LightStatus016 {
optional string brake_visible = 1;
optional bytes brake_switch_on = 2;
optional double left_turn_visible = 3;
optional double left_turn_switch_on = 4;
optional string right_turn_visible = 5;
optional string right_turn_switch_on = 6;
}

message SensorMeasurement016 {
optional bytes sensor_id = 1;
optional uint32 id = 2;

optional common.Point3D position = 3;
optional bytes theta = 4;
optional bytes length = 5;
optional string width = 6;
optional string height = 7;

optional common.Point3D velocity = 8;

optional PerceptionObstacle016.Type016 type = 9;
optional PerceptionObstacle016.SubType016 sub_type = 10;
optional string timestamp = 11;
optional BBox2D016 box = 12;
}

message PerceptionObstacle016 {
optional uint64 id = 1;

optional common.Point3D position = 2;

optional string theta = 3;
optional common.Point3D velocity = 4;

optional bytes length = 5;
optional bytes width = 6;
optional double height = 7;

repeated common.Point3D polygon_point = 8;

optional double tracking_time = 9;

enum Type016 {
UNKNOWN = 0;
UNKNOWN_MOVABLE = 1;
UNKNOWN_UNMOVABLE = 2;
PEDESTRIAN = 3;
BICYCLE = 4;
VEHICLE = 5;
};
optional Type016 type = 10;
optional double timestamp = 11;

repeated bytes point_cloud = 12;

optional string confidence = 13 [deprecated = true];
enum ConfidenceType016 {
CONFIDENCE_UNKNOWN = 0;
CONFIDENCE_CNN = 1;
CONFIDENCE_RADAR = 2;
};
optional ConfidenceType016 confidence_type = 14 [deprecated = true];
repeated common.Point3D drops = 15 [deprecated = true];

optional common.Point3D acceleration = 16;

optional common.Point3D anchor_point = 17;
optional BBox2D016 bbox2d = 18;

enum SubType016 {
ST_UNKNOWN = 0;
ST_UNKNOWN_MOVABLE = 1;
ST_UNKNOWN_UNMOVABLE = 2;
ST_CAR = 3;
ST_VAN = 4;
ST_TRUCK = 5;
ST_BUS = 6;
ST_CYCLIST = 7;
ST_MOTORCYCLIST = 8;
ST_TRICYCLIST = 9;
ST_PEDESTRIAN = 10;
ST_TRAFFICCONE = 11;
};
optional SubType016 sub_type = 19;

repeated SensorMeasurement016 measurements = 20;

optional bytes height_above_ground = 21;

repeated bytes position_covariance = 22;
repeated bytes velocity_covariance = 23;
repeated bytes acceleration_covariance = 24;

optional LightStatus016 light_status = 25;
}

message LaneMarker016 {
optional apollo.hdmap.LaneBoundaryType.Type lane_type = 1;
optional double quality = 2;
optional uint64 model_degree = 3;

optional string c0_position = 4;
optional double c1_heading_angle = 5;
optional bytes c2_curvature = 6;
optional double c3_curvature_derivative = 7;
optional double view_range = 8;
optional bytes longitude_start = 9;
optional string longitude_end = 10;
}

message LaneMarkers016 {
optional LaneMarker016 left_lane_marker = 1;
optional LaneMarker016 right_lane_marker = 2;
repeated LaneMarker016 next_left_lane_marker = 3;
repeated LaneMarker016 next_right_lane_marker = 4;
}

message CIPVInfo016 {
optional uint32 cipv_id = 1;
repeated uint64 potential_cipv_id = 2;
}

message PerceptionObstacles016 {
repeated PerceptionObstacle016 perception_obstacle = 1;
optional common.Header header = 2;
optional common.ErrorCode error_code = 3;
optional LaneMarkers016 lane_marker = 4;
optional CIPVInfo016 cipv_info = 5;
}
message BBox2D017 {
optional string xmin = 1;
optional string ymin = 2;
optional double xmax = 3;
optional bytes ymax = 4;
}

message LightStatus017 {
optional double brake_visible = 1;
optional bytes brake_switch_on = 2;
optional double left_turn_visible = 3;
optional double left_turn_switch_on = 4;
optional double right_turn_visible = 5;
optional bytes right_turn_switch_on = 6;
}

message SensorMeasurement017 {
optional string sensor_id = 1;
optional int64 id = 2;

optional common.Point3D position = 3;
optional double theta = 4;
optional double length = 5;
optional bytes width = 6;
optional string height = 7;

optional common.Point3D velocity = 8;

optional PerceptionObstacle017.Type017 type = 9;
optional PerceptionObstacle017.SubType017 sub_type = 10;
optional bytes timestamp = 11;
optional BBox2D017 box = 12;
}

message PerceptionObstacle017 {
optional uint32 id = 1;

optional common.Point3D position = 2;

optional string theta = 3;
optional common.Point3D velocity = 4;

optional double length = 5;
optional string width = 6;
optional double height = 7;

repeated common.Point3D polygon_point = 8;

optional string tracking_time = 9;

enum Type017 {
UNKNOWN = 0;
UNKNOWN_MOVABLE = 1;
UNKNOWN_UNMOVABLE = 2;
PEDESTRIAN = 3;
BICYCLE = 4;
VEHICLE = 5;
};
optional Type017 type = 10;
optional bytes timestamp = 11;

repeated bytes point_cloud = 12;

optional bytes confidence = 13 [deprecated = true];
enum ConfidenceType017 {
CONFIDENCE_UNKNOWN = 0;
CONFIDENCE_CNN = 1;
CONFIDENCE_RADAR = 2;
};
optional ConfidenceType017 confidence_type = 14 [deprecated = true];
repeated common.Point3D drops = 15 [deprecated = true];

optional common.Point3D acceleration = 16;

optional common.Point3D anchor_point = 17;
optional BBox2D017 bbox2d = 18;

enum SubType017 {
ST_UNKNOWN = 0;
ST_UNKNOWN_MOVABLE = 1;
ST_UNKNOWN_UNMOVABLE = 2;
ST_CAR = 3;
ST_VAN = 4;
ST_TRUCK = 5;
ST_BUS = 6;
ST_CYCLIST = 7;
ST_MOTORCYCLIST = 8;
ST_TRICYCLIST = 9;
ST_PEDESTRIAN = 10;
ST_TRAFFICCONE = 11;
};
optional SubType017 sub_type = 19;

repeated SensorMeasurement017 measurements = 20;

optional bytes height_above_ground = 21;

repeated bytes position_covariance = 22;
repeated double velocity_covariance = 23;
repeated string acceleration_covariance = 24;

optional LightStatus017 light_status = 25;
}

message LaneMarker017 {
optional apollo.hdmap.LaneBoundaryType.Type lane_type = 1;
optional double quality = 2;
optional double model_degree = 3;

optional double c0_position = 4;
optional string c1_heading_angle = 5;
optional string c2_curvature = 6;
optional string c3_curvature_derivative = 7;
optional double view_range = 8;
optional bytes longitude_start = 9;
optional string longitude_end = 10;
}

message LaneMarkers017 {
optional LaneMarker017 left_lane_marker = 1;
optional LaneMarker017 right_lane_marker = 2;
repeated LaneMarker017 next_left_lane_marker = 3;
repeated LaneMarker017 next_right_lane_marker = 4;
}

message CIPVInfo017 {
optional float cipv_id = 1;
repeated uint32 potential_cipv_id = 2;
}

message PerceptionObstacles017 {
repeated PerceptionObstacle017 perception_obstacle = 1;
optional common.Header header = 2;
optional common.ErrorCode error_code = 3;
optional LaneMarkers017 lane_marker = 4;
optional CIPVInfo017 cipv_info = 5;
}
message BBox2D018 {
optional bytes xmin = 1;
optional bytes ymin = 2;
optional double xmax = 3;
optional double ymax = 4;
}

message LightStatus018 {
optional string brake_visible = 1;
optional bytes brake_switch_on = 2;
optional string left_turn_visible = 3;
optional string left_turn_switch_on = 4;
optional bytes right_turn_visible = 5;
optional string right_turn_switch_on = 6;
}

message SensorMeasurement018 {
optional string sensor_id = 1;
optional uint32 id = 2;

optional common.Point3D position = 3;
optional double theta = 4;
optional string length = 5;
optional bytes width = 6;
optional bytes height = 7;

optional common.Point3D velocity = 8;

optional PerceptionObstacle018.Type018 type = 9;
optional PerceptionObstacle018.SubType018 sub_type = 10;
optional double timestamp = 11;
optional BBox2D018 box = 12;
}

message PerceptionObstacle018 {
optional double id = 1;

optional common.Point3D position = 2;

optional double theta = 3;
optional common.Point3D velocity = 4;

optional double length = 5;
optional bytes width = 6;
optional bytes height = 7;

repeated common.Point3D polygon_point = 8;

optional double tracking_time = 9;

enum Type018 {
UNKNOWN = 0;
UNKNOWN_MOVABLE = 1;
UNKNOWN_UNMOVABLE = 2;
PEDESTRIAN = 3;
BICYCLE = 4;
VEHICLE = 5;
};
optional Type018 type = 10;
optional string timestamp = 11;

repeated bytes point_cloud = 12;

optional string confidence = 13 [deprecated = true];
enum ConfidenceType018 {
CONFIDENCE_UNKNOWN = 0;
CONFIDENCE_CNN = 1;
CONFIDENCE_RADAR = 2;
};
optional ConfidenceType018 confidence_type = 14 [deprecated = true];
repeated common.Point3D drops = 15 [deprecated = true];

optional common.Point3D acceleration = 16;

optional common.Point3D anchor_point = 17;
optional BBox2D018 bbox2d = 18;

enum SubType018 {
ST_UNKNOWN = 0;
ST_UNKNOWN_MOVABLE = 1;
ST_UNKNOWN_UNMOVABLE = 2;
ST_CAR = 3;
ST_VAN = 4;
ST_TRUCK = 5;
ST_BUS = 6;
ST_CYCLIST = 7;
ST_MOTORCYCLIST = 8;
ST_TRICYCLIST = 9;
ST_PEDESTRIAN = 10;
ST_TRAFFICCONE = 11;
};
optional SubType018 sub_type = 19;

repeated SensorMeasurement018 measurements = 20;

optional bytes height_above_ground = 21;

repeated string position_covariance = 22;
repeated double velocity_covariance = 23;
repeated double acceleration_covariance = 24;

optional LightStatus018 light_status = 25;
}

message LaneMarker018 {
optional apollo.hdmap.LaneBoundaryType.Type lane_type = 1;
optional bytes quality = 2;
optional double model_degree = 3;

optional bytes c0_position = 4;
optional bytes c1_heading_angle = 5;
optional bytes c2_curvature = 6;
optional bytes c3_curvature_derivative = 7;
optional string view_range = 8;
optional string longitude_start = 9;
optional string longitude_end = 10;
}

message LaneMarkers018 {
optional LaneMarker018 left_lane_marker = 1;
optional LaneMarker018 right_lane_marker = 2;
repeated LaneMarker018 next_left_lane_marker = 3;
repeated LaneMarker018 next_right_lane_marker = 4;
}

message CIPVInfo018 {
optional float cipv_id = 1;
repeated int32 potential_cipv_id = 2;
}

message PerceptionObstacles018 {
repeated PerceptionObstacle018 perception_obstacle = 1;
optional common.Header header = 2;
optional common.ErrorCode error_code = 3;
optional LaneMarkers018 lane_marker = 4;
optional CIPVInfo018 cipv_info = 5;
}
message BBox2D019 {
optional bytes xmin = 1;
optional double ymin = 2;
optional bytes xmax = 3;
optional double ymax = 4;
}

message LightStatus019 {
optional bytes brake_visible = 1;
optional bytes brake_switch_on = 2;
optional bytes left_turn_visible = 3;
optional string left_turn_switch_on = 4;
optional bytes right_turn_visible = 5;
optional bytes right_turn_switch_on = 6;
}

message SensorMeasurement019 {
optional bytes sensor_id = 1;
optional int64 id = 2;

optional common.Point3D position = 3;
optional bytes theta = 4;
optional string length = 5;
optional bytes width = 6;
optional double height = 7;

optional common.Point3D velocity = 8;

optional PerceptionObstacle019.Type019 type = 9;
optional PerceptionObstacle019.SubType019 sub_type = 10;
optional double timestamp = 11;
optional BBox2D019 box = 12;
}

message PerceptionObstacle019 {
optional double id = 1;

optional common.Point3D position = 2;

optional string theta = 3;
optional common.Point3D velocity = 4;

optional bytes length = 5;
optional double width = 6;
optional double height = 7;

repeated common.Point3D polygon_point = 8;

optional string tracking_time = 9;

enum Type019 {
UNKNOWN = 0;
UNKNOWN_MOVABLE = 1;
UNKNOWN_UNMOVABLE = 2;
PEDESTRIAN = 3;
BICYCLE = 4;
VEHICLE = 5;
};
optional Type019 type = 10;
optional double timestamp = 11;

repeated double point_cloud = 12;

optional double confidence = 13 [deprecated = true];
enum ConfidenceType019 {
CONFIDENCE_UNKNOWN = 0;
CONFIDENCE_CNN = 1;
CONFIDENCE_RADAR = 2;
};
optional ConfidenceType019 confidence_type = 14 [deprecated = true];
repeated common.Point3D drops = 15 [deprecated = true];

optional common.Point3D acceleration = 16;

optional common.Point3D anchor_point = 17;
optional BBox2D019 bbox2d = 18;

enum SubType019 {
ST_UNKNOWN = 0;
ST_UNKNOWN_MOVABLE = 1;
ST_UNKNOWN_UNMOVABLE = 2;
ST_CAR = 3;
ST_VAN = 4;
ST_TRUCK = 5;
ST_BUS = 6;
ST_CYCLIST = 7;
ST_MOTORCYCLIST = 8;
ST_TRICYCLIST = 9;
ST_PEDESTRIAN = 10;
ST_TRAFFICCONE = 11;
};
optional SubType019 sub_type = 19;

repeated SensorMeasurement019 measurements = 20;

optional double height_above_ground = 21;

repeated bytes position_covariance = 22;
repeated string velocity_covariance = 23;
repeated string acceleration_covariance = 24;

optional LightStatus019 light_status = 25;
}

message LaneMarker019 {
optional apollo.hdmap.LaneBoundaryType.Type lane_type = 1;
optional bytes quality = 2;
optional uint64 model_degree = 3;

optional bytes c0_position = 4;
optional bytes c1_heading_angle = 5;
optional bytes c2_curvature = 6;
optional string c3_curvature_derivative = 7;
optional bytes view_range = 8;
optional string longitude_start = 9;
optional double longitude_end = 10;
}

message LaneMarkers019 {
optional LaneMarker019 left_lane_marker = 1;
optional LaneMarker019 right_lane_marker = 2;
repeated LaneMarker019 next_left_lane_marker = 3;
repeated LaneMarker019 next_right_lane_marker = 4;
}

message CIPVInfo019 {
optional uint64 cipv_id = 1;
repeated double potential_cipv_id = 2;
}

message PerceptionObstacles019 {
repeated PerceptionObstacle019 perception_obstacle = 1;
optional common.Header header = 2;
optional common.ErrorCode error_code = 3;
optional LaneMarkers019 lane_marker = 4;
optional CIPVInfo019 cipv_info = 5;
}
message BBox2D020 {
optional string xmin = 1;
optional bytes ymin = 2;
optional double xmax = 3;
optional string ymax = 4;
}

message LightStatus020 {
optional bytes brake_visible = 1;
optional string brake_switch_on = 2;
optional bytes left_turn_visible = 3;
optional double left_turn_switch_on = 4;
optional bytes right_turn_visible = 5;
optional string right_turn_switch_on = 6;
}

message SensorMeasurement020 {
optional bytes sensor_id = 1;
optional double id = 2;

optional common.Point3D position = 3;
optional double theta = 4;
optional bytes length = 5;
optional bytes width = 6;
optional string height = 7;

optional common.Point3D velocity = 8;

optional PerceptionObstacle020.Type020 type = 9;
optional PerceptionObstacle020.SubType020 sub_type = 10;
optional double timestamp = 11;
optional BBox2D020 box = 12;
}

message PerceptionObstacle020 {
optional int64 id = 1;

optional common.Point3D position = 2;

optional string theta = 3;
optional common.Point3D velocity = 4;

optional bytes length = 5;
optional string width = 6;
optional double height = 7;

repeated common.Point3D polygon_point = 8;

optional string tracking_time = 9;

enum Type020 {
UNKNOWN = 0;
UNKNOWN_MOVABLE = 1;
UNKNOWN_UNMOVABLE = 2;
PEDESTRIAN = 3;
BICYCLE = 4;
VEHICLE = 5;
};
optional Type020 type = 10;
optional string timestamp = 11;

repeated bytes point_cloud = 12;

optional double confidence = 13 [deprecated = true];
enum ConfidenceType020 {
CONFIDENCE_UNKNOWN = 0;
CONFIDENCE_CNN = 1;
CONFIDENCE_RADAR = 2;
};
optional ConfidenceType020 confidence_type = 14 [deprecated = true];
repeated common.Point3D drops = 15 [deprecated = true];

optional common.Point3D acceleration = 16;

optional common.Point3D anchor_point = 17;
optional BBox2D020 bbox2d = 18;

enum SubType020 {
ST_UNKNOWN = 0;
ST_UNKNOWN_MOVABLE = 1;
ST_UNKNOWN_UNMOVABLE = 2;
ST_CAR = 3;
ST_VAN = 4;
ST_TRUCK = 5;
ST_BUS = 6;
ST_CYCLIST = 7;
ST_MOTORCYCLIST = 8;
ST_TRICYCLIST = 9;
ST_PEDESTRIAN = 10;
ST_TRAFFICCONE = 11;
};
optional SubType020 sub_type = 19;

repeated SensorMeasurement020 measurements = 20;

optional bytes height_above_ground = 21;

repeated bytes position_covariance = 22;
repeated string velocity_covariance = 23;
repeated string acceleration_covariance = 24;

optional LightStatus020 light_status = 25;
}

message LaneMarker020 {
optional apollo.hdmap.LaneBoundaryType.Type lane_type = 1;
optional double quality = 2;
optional int32 model_degree = 3;

optional string c0_position = 4;
optional string c1_heading_angle = 5;
optional bytes c2_curvature = 6;
optional double c3_curvature_derivative = 7;
optional double view_range = 8;
optional string longitude_start = 9;
optional string longitude_end = 10;
}

message LaneMarkers020 {
optional LaneMarker020 left_lane_marker = 1;
optional LaneMarker020 right_lane_marker = 2;
repeated LaneMarker020 next_left_lane_marker = 3;
repeated LaneMarker020 next_right_lane_marker = 4;
}

message CIPVInfo020 {
optional uint64 cipv_id = 1;
repeated int32 potential_cipv_id = 2;
}

message PerceptionObstacles020 {
repeated PerceptionObstacle020 perception_obstacle = 1;
optional common.Header header = 2;
optional common.ErrorCode error_code = 3;
optional LaneMarkers020 lane_marker = 4;
optional CIPVInfo020 cipv_info = 5;
}
message BBox2D021 {
optional string xmin = 1;
optional string ymin = 2;
optional string xmax = 3;
optional bytes ymax = 4;
}

message LightStatus021 {
optional string brake_visible = 1;
optional double brake_switch_on = 2;
optional bytes left_turn_visible = 3;
optional double left_turn_switch_on = 4;
optional string right_turn_visible = 5;
optional string right_turn_switch_on = 6;
}

message SensorMeasurement021 {
optional bytes sensor_id = 1;
optional uint32 id = 2;

optional common.Point3D position = 3;
optional double theta = 4;
optional bytes length = 5;
optional bytes width = 6;
optional string height = 7;

optional common.Point3D velocity = 8;

optional PerceptionObstacle021.Type021 type = 9;
optional PerceptionObstacle021.SubType021 sub_type = 10;
optional string timestamp = 11;
optional BBox2D021 box = 12;
}

message PerceptionObstacle021 {
optional string id = 1;

optional common.Point3D position = 2;

optional double theta = 3;
optional common.Point3D velocity = 4;

optional double length = 5;
optional string width = 6;
optional string height = 7;

repeated common.Point3D polygon_point = 8;

optional string tracking_time = 9;

enum Type021 {
UNKNOWN = 0;
UNKNOWN_MOVABLE = 1;
UNKNOWN_UNMOVABLE = 2;
PEDESTRIAN = 3;
BICYCLE = 4;
VEHICLE = 5;
};
optional Type021 type = 10;
optional double timestamp = 11;

repeated string point_cloud = 12;

optional bytes confidence = 13 [deprecated = true];
enum ConfidenceType021 {
CONFIDENCE_UNKNOWN = 0;
CONFIDENCE_CNN = 1;
CONFIDENCE_RADAR = 2;
};
optional ConfidenceType021 confidence_type = 14 [deprecated = true];
repeated common.Point3D drops = 15 [deprecated = true];

optional common.Point3D acceleration = 16;

optional common.Point3D anchor_point = 17;
optional BBox2D021 bbox2d = 18;

enum SubType021 {
ST_UNKNOWN = 0;
ST_UNKNOWN_MOVABLE = 1;
ST_UNKNOWN_UNMOVABLE = 2;
ST_CAR = 3;
ST_VAN = 4;
ST_TRUCK = 5;
ST_BUS = 6;
ST_CYCLIST = 7;
ST_MOTORCYCLIST = 8;
ST_TRICYCLIST = 9;
ST_PEDESTRIAN = 10;
ST_TRAFFICCONE = 11;
};
optional SubType021 sub_type = 19;

repeated SensorMeasurement021 measurements = 20;

optional string height_above_ground = 21;

repeated string position_covariance = 22;
repeated bytes velocity_covariance = 23;
repeated bytes acceleration_covariance = 24;

optional LightStatus021 light_status = 25;
}

message LaneMarker021 {
optional apollo.hdmap.LaneBoundaryType.Type lane_type = 1;
optional bytes quality = 2;
optional float model_degree = 3;

optional string c0_position = 4;
optional double c1_heading_angle = 5;
optional bytes c2_curvature = 6;
optional double c3_curvature_derivative = 7;
optional string view_range = 8;
optional bytes longitude_start = 9;
optional string longitude_end = 10;
}

message LaneMarkers021 {
optional LaneMarker021 left_lane_marker = 1;
optional LaneMarker021 right_lane_marker = 2;
repeated LaneMarker021 next_left_lane_marker = 3;
repeated LaneMarker021 next_right_lane_marker = 4;
}

message CIPVInfo021 {
optional int32 cipv_id = 1;
repeated float potential_cipv_id = 2;
}

message PerceptionObstacles021 {
repeated PerceptionObstacle021 perception_obstacle = 1;
optional common.Header header = 2;
optional common.ErrorCode error_code = 3;
optional LaneMarkers021 lane_marker = 4;
optional CIPVInfo021 cipv_info = 5;
}
message BBox2D022 {
optional string xmin = 1;
optional bytes ymin = 2;
optional string xmax = 3;
optional bytes ymax = 4;
}

message LightStatus022 {
optional string brake_visible = 1;
optional double brake_switch_on = 2;
optional string left_turn_visible = 3;
optional bytes left_turn_switch_on = 4;
optional string right_turn_visible = 5;
optional bytes right_turn_switch_on = 6;
}

message SensorMeasurement022 {
optional bytes sensor_id = 1;
optional uint32 id = 2;

optional common.Point3D position = 3;
optional string theta = 4;
optional bytes length = 5;
optional bytes width = 6;
optional bytes height = 7;

optional common.Point3D velocity = 8;

optional PerceptionObstacle022.Type022 type = 9;
optional PerceptionObstacle022.SubType022 sub_type = 10;
optional double timestamp = 11;
optional BBox2D022 box = 12;
}

message PerceptionObstacle022 {
optional uint32 id = 1;

optional common.Point3D position = 2;

optional string theta = 3;
optional common.Point3D velocity = 4;

optional double length = 5;
optional bytes width = 6;
optional string height = 7;

repeated common.Point3D polygon_point = 8;

optional bytes tracking_time = 9;

enum Type022 {
UNKNOWN = 0;
UNKNOWN_MOVABLE = 1;
UNKNOWN_UNMOVABLE = 2;
PEDESTRIAN = 3;
BICYCLE = 4;
VEHICLE = 5;
};
optional Type022 type = 10;
optional double timestamp = 11;

repeated bytes point_cloud = 12;

optional bytes confidence = 13 [deprecated = true];
enum ConfidenceType022 {
CONFIDENCE_UNKNOWN = 0;
CONFIDENCE_CNN = 1;
CONFIDENCE_RADAR = 2;
};
optional ConfidenceType022 confidence_type = 14 [deprecated = true];
repeated common.Point3D drops = 15 [deprecated = true];

optional common.Point3D acceleration = 16;

optional common.Point3D anchor_point = 17;
optional BBox2D022 bbox2d = 18;

enum SubType022 {
ST_UNKNOWN = 0;
ST_UNKNOWN_MOVABLE = 1;
ST_UNKNOWN_UNMOVABLE = 2;
ST_CAR = 3;
ST_VAN = 4;
ST_TRUCK = 5;
ST_BUS = 6;
ST_CYCLIST = 7;
ST_MOTORCYCLIST = 8;
ST_TRICYCLIST = 9;
ST_PEDESTRIAN = 10;
ST_TRAFFICCONE = 11;
};
optional SubType022 sub_type = 19;

repeated SensorMeasurement022 measurements = 20;

optional bytes height_above_ground = 21;

repeated string position_covariance = 22;
repeated double velocity_covariance = 23;
repeated double acceleration_covariance = 24;

optional LightStatus022 light_status = 25;
}

message LaneMarker022 {
optional apollo.hdmap.LaneBoundaryType.Type lane_type = 1;
optional bytes quality = 2;
optional double model_degree = 3;

optional bytes c0_position = 4;
optional string c1_heading_angle = 5;
optional double c2_curvature = 6;
optional string c3_curvature_derivative = 7;
optional bytes view_range = 8;
optional string longitude_start = 9;
optional string longitude_end = 10;
}

message LaneMarkers022 {
optional LaneMarker022 left_lane_marker = 1;
optional LaneMarker022 right_lane_marker = 2;
repeated LaneMarker022 next_left_lane_marker = 3;
repeated LaneMarker022 next_right_lane_marker = 4;
}

message CIPVInfo022 {
optional float cipv_id = 1;
repeated bytes potential_cipv_id = 2;
}

message PerceptionObstacles022 {
repeated PerceptionObstacle022 perception_obstacle = 1;
optional common.Header header = 2;
optional common.ErrorCode error_code = 3;
optional LaneMarkers022 lane_marker = 4;
optional CIPVInfo022 cipv_info = 5;
}
message BBox2D023 {
optional double xmin = 1;
optional bytes ymin = 2;
optional string xmax = 3;
optional double ymax = 4;
}

message LightStatus023 {
optional string brake_visible = 1;
optional double brake_switch_on = 2;
optional string left_turn_visible = 3;
optional double left_turn_switch_on = 4;
optional bytes right_turn_visible = 5;
optional bytes right_turn_switch_on = 6;
}

message SensorMeasurement023 {
optional bytes sensor_id = 1;
optional uint32 id = 2;

optional common.Point3D position = 3;
optional string theta = 4;
optional double length = 5;
optional double width = 6;
optional string height = 7;

optional common.Point3D velocity = 8;

optional PerceptionObstacle023.Type023 type = 9;
optional PerceptionObstacle023.SubType023 sub_type = 10;
optional double timestamp = 11;
optional BBox2D023 box = 12;
}

message PerceptionObstacle023 {
optional double id = 1;

optional common.Point3D position = 2;

optional string theta = 3;
optional common.Point3D velocity = 4;

optional double length = 5;
optional bytes width = 6;
optional bytes height = 7;

repeated common.Point3D polygon_point = 8;

optional bytes tracking_time = 9;

enum Type023 {
UNKNOWN = 0;
UNKNOWN_MOVABLE = 1;
UNKNOWN_UNMOVABLE = 2;
PEDESTRIAN = 3;
BICYCLE = 4;
VEHICLE = 5;
};
optional Type023 type = 10;
optional string timestamp = 11;

repeated bytes point_cloud = 12;

optional string confidence = 13 [deprecated = true];
enum ConfidenceType023 {
CONFIDENCE_UNKNOWN = 0;
CONFIDENCE_CNN = 1;
CONFIDENCE_RADAR = 2;
};
optional ConfidenceType023 confidence_type = 14 [deprecated = true];
repeated common.Point3D drops = 15 [deprecated = true];

optional common.Point3D acceleration = 16;

optional common.Point3D anchor_point = 17;
optional BBox2D023 bbox2d = 18;

enum SubType023 {
ST_UNKNOWN = 0;
ST_UNKNOWN_MOVABLE = 1;
ST_UNKNOWN_UNMOVABLE = 2;
ST_CAR = 3;
ST_VAN = 4;
ST_TRUCK = 5;
ST_BUS = 6;
ST_CYCLIST = 7;
ST_MOTORCYCLIST = 8;
ST_TRICYCLIST = 9;
ST_PEDESTRIAN = 10;
ST_TRAFFICCONE = 11;
};
optional SubType023 sub_type = 19;

repeated SensorMeasurement023 measurements = 20;

optional string height_above_ground = 21;

repeated bytes position_covariance = 22;
repeated string velocity_covariance = 23;
repeated bytes acceleration_covariance = 24;

optional LightStatus023 light_status = 25;
}

message LaneMarker023 {
optional apollo.hdmap.LaneBoundaryType.Type lane_type = 1;
optional string quality = 2;
optional uint64 model_degree = 3;

optional bytes c0_position = 4;
optional bytes c1_heading_angle = 5;
optional double c2_curvature = 6;
optional string c3_curvature_derivative = 7;
optional double view_range = 8;
optional bytes longitude_start = 9;
optional string longitude_end = 10;
}

message LaneMarkers023 {
optional LaneMarker023 left_lane_marker = 1;
optional LaneMarker023 right_lane_marker = 2;
repeated LaneMarker023 next_left_lane_marker = 3;
repeated LaneMarker023 next_right_lane_marker = 4;
}

message CIPVInfo023 {
optional uint64 cipv_id = 1;
repeated string potential_cipv_id = 2;
}

message PerceptionObstacles023 {
repeated PerceptionObstacle023 perception_obstacle = 1;
optional common.Header header = 2;
optional common.ErrorCode error_code = 3;
optional LaneMarkers023 lane_marker = 4;
optional CIPVInfo023 cipv_info = 5;
}
message BBox2D024 {
optional string xmin = 1;
optional string ymin = 2;
optional double xmax = 3;
optional bytes ymax = 4;
}

message LightStatus024 {
optional bytes brake_visible = 1;
optional bytes brake_switch_on = 2;
optional bytes left_turn_visible = 3;
optional bytes left_turn_switch_on = 4;
optional double right_turn_visible = 5;
optional double right_turn_switch_on = 6;
}

message SensorMeasurement024 {
optional string sensor_id = 1;
optional uint32 id = 2;

optional common.Point3D position = 3;
optional double theta = 4;
optional double length = 5;
optional string width = 6;
optional double height = 7;

optional common.Point3D velocity = 8;

optional PerceptionObstacle024.Type024 type = 9;
optional PerceptionObstacle024.SubType024 sub_type = 10;
optional bytes timestamp = 11;
optional BBox2D024 box = 12;
}

message PerceptionObstacle024 {
optional uint32 id = 1;

optional common.Point3D position = 2;

optional string theta = 3;
optional common.Point3D velocity = 4;

optional bytes length = 5;
optional bytes width = 6;
optional double height = 7;

repeated common.Point3D polygon_point = 8;

optional string tracking_time = 9;

enum Type024 {
UNKNOWN = 0;
UNKNOWN_MOVABLE = 1;
UNKNOWN_UNMOVABLE = 2;
PEDESTRIAN = 3;
BICYCLE = 4;
VEHICLE = 5;
};
optional Type024 type = 10;
optional bytes timestamp = 11;

repeated string point_cloud = 12;

optional string confidence = 13 [deprecated = true];
enum ConfidenceType024 {
CONFIDENCE_UNKNOWN = 0;
CONFIDENCE_CNN = 1;
CONFIDENCE_RADAR = 2;
};
optional ConfidenceType024 confidence_type = 14 [deprecated = true];
repeated common.Point3D drops = 15 [deprecated = true];

optional common.Point3D acceleration = 16;

optional common.Point3D anchor_point = 17;
optional BBox2D024 bbox2d = 18;

enum SubType024 {
ST_UNKNOWN = 0;
ST_UNKNOWN_MOVABLE = 1;
ST_UNKNOWN_UNMOVABLE = 2;
ST_CAR = 3;
ST_VAN = 4;
ST_TRUCK = 5;
ST_BUS = 6;
ST_CYCLIST = 7;
ST_MOTORCYCLIST = 8;
ST_TRICYCLIST = 9;
ST_PEDESTRIAN = 10;
ST_TRAFFICCONE = 11;
};
optional SubType024 sub_type = 19;

repeated SensorMeasurement024 measurements = 20;

optional double height_above_ground = 21;

repeated string position_covariance = 22;
repeated bytes velocity_covariance = 23;
repeated double acceleration_covariance = 24;

optional LightStatus024 light_status = 25;
}

message LaneMarker024 {
optional apollo.hdmap.LaneBoundaryType.Type lane_type = 1;
optional double quality = 2;
optional float model_degree = 3;

optional bytes c0_position = 4;
optional string c1_heading_angle = 5;
optional double c2_curvature = 6;
optional bytes c3_curvature_derivative = 7;
optional double view_range = 8;
optional double longitude_start = 9;
optional bytes longitude_end = 10;
}

message LaneMarkers024 {
optional LaneMarker024 left_lane_marker = 1;
optional LaneMarker024 right_lane_marker = 2;
repeated LaneMarker024 next_left_lane_marker = 3;
repeated LaneMarker024 next_right_lane_marker = 4;
}

message CIPVInfo024 {
optional uint32 cipv_id = 1;
repeated uint64 potential_cipv_id = 2;
}

message PerceptionObstacles024 {
repeated PerceptionObstacle024 perception_obstacle = 1;
optional common.Header header = 2;
optional common.ErrorCode error_code = 3;
optional LaneMarkers024 lane_marker = 4;
optional CIPVInfo024 cipv_info = 5;
}
message BBox2D025 {
optional string xmin = 1;
optional double ymin = 2;
optional bytes xmax = 3;
optional bytes ymax = 4;
}

message LightStatus025 {
optional bytes brake_visible = 1;
optional bytes brake_switch_on = 2;
optional double left_turn_visible = 3;
optional bytes left_turn_switch_on = 4;
optional string right_turn_visible = 5;
optional bytes right_turn_switch_on = 6;
}

message SensorMeasurement025 {
optional string sensor_id = 1;
optional uint32 id = 2;

optional common.Point3D position = 3;
optional bytes theta = 4;
optional double length = 5;
optional double width = 6;
optional double height = 7;

optional common.Point3D velocity = 8;

optional PerceptionObstacle025.Type025 type = 9;
optional PerceptionObstacle025.SubType025 sub_type = 10;
optional double timestamp = 11;
optional BBox2D025 box = 12;
}

message PerceptionObstacle025 {
optional double id = 1;

optional common.Point3D position = 2;

optional double theta = 3;
optional common.Point3D velocity = 4;

optional double length = 5;
optional bytes width = 6;
optional string height = 7;

repeated common.Point3D polygon_point = 8;

optional string tracking_time = 9;

enum Type025 {
UNKNOWN = 0;
UNKNOWN_MOVABLE = 1;
UNKNOWN_UNMOVABLE = 2;
PEDESTRIAN = 3;
BICYCLE = 4;
VEHICLE = 5;
};
optional Type025 type = 10;
optional string timestamp = 11;

repeated bytes point_cloud = 12;

optional double confidence = 13 [deprecated = true];
enum ConfidenceType025 {
CONFIDENCE_UNKNOWN = 0;
CONFIDENCE_CNN = 1;
CONFIDENCE_RADAR = 2;
};
optional ConfidenceType025 confidence_type = 14 [deprecated = true];
repeated common.Point3D drops = 15 [deprecated = true];

optional common.Point3D acceleration = 16;

optional common.Point3D anchor_point = 17;
optional BBox2D025 bbox2d = 18;

enum SubType025 {
ST_UNKNOWN = 0;
ST_UNKNOWN_MOVABLE = 1;
ST_UNKNOWN_UNMOVABLE = 2;
ST_CAR = 3;
ST_VAN = 4;
ST_TRUCK = 5;
ST_BUS = 6;
ST_CYCLIST = 7;
ST_MOTORCYCLIST = 8;
ST_TRICYCLIST = 9;
ST_PEDESTRIAN = 10;
ST_TRAFFICCONE = 11;
};
optional SubType025 sub_type = 19;

repeated SensorMeasurement025 measurements = 20;

optional string height_above_ground = 21;

repeated double position_covariance = 22;
repeated bytes velocity_covariance = 23;
repeated string acceleration_covariance = 24;

optional LightStatus025 light_status = 25;
}

message LaneMarker025 {
optional apollo.hdmap.LaneBoundaryType.Type lane_type = 1;
optional string quality = 2;
optional float model_degree = 3;

optional string c0_position = 4;
optional string c1_heading_angle = 5;
optional string c2_curvature = 6;
optional double c3_curvature_derivative = 7;
optional double view_range = 8;
optional string longitude_start = 9;
optional string longitude_end = 10;
}

message LaneMarkers025 {
optional LaneMarker025 left_lane_marker = 1;
optional LaneMarker025 right_lane_marker = 2;
repeated LaneMarker025 next_left_lane_marker = 3;
repeated LaneMarker025 next_right_lane_marker = 4;
}

message CIPVInfo025 {
optional string cipv_id = 1;
repeated uint64 potential_cipv_id = 2;
}

message PerceptionObstacles025 {
repeated PerceptionObstacle025 perception_obstacle = 1;
optional common.Header header = 2;
optional common.ErrorCode error_code = 3;
optional LaneMarkers025 lane_marker = 4;
optional CIPVInfo025 cipv_info = 5;
}
message BBox2D026 {
optional string xmin = 1;
optional bytes ymin = 2;
optional bytes xmax = 3;
optional string ymax = 4;
}

message LightStatus026 {
optional double brake_visible = 1;
optional double brake_switch_on = 2;
optional bytes left_turn_visible = 3;
optional double left_turn_switch_on = 4;
optional double right_turn_visible = 5;
optional string right_turn_switch_on = 6;
}

message SensorMeasurement026 {
optional string sensor_id = 1;
optional string id = 2;

optional common.Point3D position = 3;
optional bytes theta = 4;
optional bytes length = 5;
optional bytes width = 6;
optional bytes height = 7;

optional common.Point3D velocity = 8;

optional PerceptionObstacle026.Type026 type = 9;
optional PerceptionObstacle026.SubType026 sub_type = 10;
optional string timestamp = 11;
optional BBox2D026 box = 12;
}

message PerceptionObstacle026 {
optional uint32 id = 1;

optional common.Point3D position = 2;

optional bytes theta = 3;
optional common.Point3D velocity = 4;

optional double length = 5;
optional string width = 6;
optional double height = 7;

repeated common.Point3D polygon_point = 8;

optional bytes tracking_time = 9;

enum Type026 {
UNKNOWN = 0;
UNKNOWN_MOVABLE = 1;
UNKNOWN_UNMOVABLE = 2;
PEDESTRIAN = 3;
BICYCLE = 4;
VEHICLE = 5;
};
optional Type026 type = 10;
optional double timestamp = 11;

repeated string point_cloud = 12;

optional double confidence = 13 [deprecated = true];
enum ConfidenceType026 {
CONFIDENCE_UNKNOWN = 0;
CONFIDENCE_CNN = 1;
CONFIDENCE_RADAR = 2;
};
optional ConfidenceType026 confidence_type = 14 [deprecated = true];
repeated common.Point3D drops = 15 [deprecated = true];

optional common.Point3D acceleration = 16;

optional common.Point3D anchor_point = 17;
optional BBox2D026 bbox2d = 18;

enum SubType026 {
ST_UNKNOWN = 0;
ST_UNKNOWN_MOVABLE = 1;
ST_UNKNOWN_UNMOVABLE = 2;
ST_CAR = 3;
ST_VAN = 4;
ST_TRUCK = 5;
ST_BUS = 6;
ST_CYCLIST = 7;
ST_MOTORCYCLIST = 8;
ST_TRICYCLIST = 9;
ST_PEDESTRIAN = 10;
ST_TRAFFICCONE = 11;
};
optional SubType026 sub_type = 19;

repeated SensorMeasurement026 measurements = 20;

optional string height_above_ground = 21;

repeated string position_covariance = 22;
repeated string velocity_covariance = 23;
repeated string acceleration_covariance = 24;

optional LightStatus026 light_status = 25;
}

message LaneMarker026 {
optional apollo.hdmap.LaneBoundaryType.Type lane_type = 1;
optional double quality = 2;
optional bytes model_degree = 3;

optional string c0_position = 4;
optional bytes c1_heading_angle = 5;
optional bytes c2_curvature = 6;
optional string c3_curvature_derivative = 7;
optional bytes view_range = 8;
optional bytes longitude_start = 9;
optional bytes longitude_end = 10;
}

message LaneMarkers026 {
optional LaneMarker026 left_lane_marker = 1;
optional LaneMarker026 right_lane_marker = 2;
repeated LaneMarker026 next_left_lane_marker = 3;
repeated LaneMarker026 next_right_lane_marker = 4;
}

message CIPVInfo026 {
optional string cipv_id = 1;
repeated uint32 potential_cipv_id = 2;
}

message PerceptionObstacles026 {
repeated PerceptionObstacle026 perception_obstacle = 1;
optional common.Header header = 2;
optional common.ErrorCode error_code = 3;
optional LaneMarkers026 lane_marker = 4;
optional CIPVInfo026 cipv_info = 5;
}
message BBox2D027 {
optional string xmin = 1;
optional double ymin = 2;
optional double xmax = 3;
optional double ymax = 4;
}

message LightStatus027 {
optional bytes brake_visible = 1;
optional double brake_switch_on = 2;
optional bytes left_turn_visible = 3;
optional double left_turn_switch_on = 4;
optional bytes right_turn_visible = 5;
optional double right_turn_switch_on = 6;
}

message SensorMeasurement027 {
optional bytes sensor_id = 1;
optional uint64 id = 2;

optional common.Point3D position = 3;
optional double theta = 4;
optional bytes length = 5;
optional bytes width = 6;
optional double height = 7;

optional common.Point3D velocity = 8;

optional PerceptionObstacle027.Type027 type = 9;
optional PerceptionObstacle027.SubType027 sub_type = 10;
optional bytes timestamp = 11;
optional BBox2D027 box = 12;
}

message PerceptionObstacle027 {
optional int32 id = 1;

optional common.Point3D position = 2;

optional bytes theta = 3;
optional common.Point3D velocity = 4;

optional string length = 5;
optional string width = 6;
optional double height = 7;

repeated common.Point3D polygon_point = 8;

optional bytes tracking_time = 9;

enum Type027 {
UNKNOWN = 0;
UNKNOWN_MOVABLE = 1;
UNKNOWN_UNMOVABLE = 2;
PEDESTRIAN = 3;
BICYCLE = 4;
VEHICLE = 5;
};
optional Type027 type = 10;
optional double timestamp = 11;

repeated double point_cloud = 12;

optional string confidence = 13 [deprecated = true];
enum ConfidenceType027 {
CONFIDENCE_UNKNOWN = 0;
CONFIDENCE_CNN = 1;
CONFIDENCE_RADAR = 2;
};
optional ConfidenceType027 confidence_type = 14 [deprecated = true];
repeated common.Point3D drops = 15 [deprecated = true];

optional common.Point3D acceleration = 16;

optional common.Point3D anchor_point = 17;
optional BBox2D027 bbox2d = 18;

enum SubType027 {
ST_UNKNOWN = 0;
ST_UNKNOWN_MOVABLE = 1;
ST_UNKNOWN_UNMOVABLE = 2;
ST_CAR = 3;
ST_VAN = 4;
ST_TRUCK = 5;
ST_BUS = 6;
ST_CYCLIST = 7;
ST_MOTORCYCLIST = 8;
ST_TRICYCLIST = 9;
ST_PEDESTRIAN = 10;
ST_TRAFFICCONE = 11;
};
optional SubType027 sub_type = 19;

repeated SensorMeasurement027 measurements = 20;

optional double height_above_ground = 21;

repeated double position_covariance = 22;
repeated bytes velocity_covariance = 23;
repeated string acceleration_covariance = 24;

optional LightStatus027 light_status = 25;
}

message LaneMarker027 {
optional apollo.hdmap.LaneBoundaryType.Type lane_type = 1;
optional string quality = 2;
optional bytes model_degree = 3;

optional string c0_position = 4;
optional bytes c1_heading_angle = 5;
optional string c2_curvature = 6;
optional string c3_curvature_derivative = 7;
optional bytes view_range = 8;
optional double longitude_start = 9;
optional string longitude_end = 10;
}

message LaneMarkers027 {
optional LaneMarker027 left_lane_marker = 1;
optional LaneMarker027 right_lane_marker = 2;
repeated LaneMarker027 next_left_lane_marker = 3;
repeated LaneMarker027 next_right_lane_marker = 4;
}

message CIPVInfo027 {
optional int32 cipv_id = 1;
repeated string potential_cipv_id = 2;
}

message PerceptionObstacles027 {
repeated PerceptionObstacle027 perception_obstacle = 1;
optional common.Header header = 2;
optional common.ErrorCode error_code = 3;
optional LaneMarkers027 lane_marker = 4;
optional CIPVInfo027 cipv_info = 5;
}
message BBox2D028 {
optional double xmin = 1;
optional bytes ymin = 2;
optional string xmax = 3;
optional string ymax = 4;
}

message LightStatus028 {
optional double brake_visible = 1;
optional bytes brake_switch_on = 2;
optional double left_turn_visible = 3;
optional double left_turn_switch_on = 4;
optional bytes right_turn_visible = 5;
optional string right_turn_switch_on = 6;
}

message SensorMeasurement028 {
optional string sensor_id = 1;
optional int32 id = 2;

optional common.Point3D position = 3;
optional string theta = 4;
optional double length = 5;
optional string width = 6;
optional double height = 7;

optional common.Point3D velocity = 8;

optional PerceptionObstacle028.Type028 type = 9;
optional PerceptionObstacle028.SubType028 sub_type = 10;
optional bytes timestamp = 11;
optional BBox2D028 box = 12;
}

message PerceptionObstacle028 {
optional float id = 1;

optional common.Point3D position = 2;

optional bytes theta = 3;
optional common.Point3D velocity = 4;

optional string length = 5;
optional string width = 6;
optional bytes height = 7;

repeated common.Point3D polygon_point = 8;

optional double tracking_time = 9;

enum Type028 {
UNKNOWN = 0;
UNKNOWN_MOVABLE = 1;
UNKNOWN_UNMOVABLE = 2;
PEDESTRIAN = 3;
BICYCLE = 4;
VEHICLE = 5;
};
optional Type028 type = 10;
optional string timestamp = 11;

repeated string point_cloud = 12;

optional bytes confidence = 13 [deprecated = true];
enum ConfidenceType028 {
CONFIDENCE_UNKNOWN = 0;
CONFIDENCE_CNN = 1;
CONFIDENCE_RADAR = 2;
};
optional ConfidenceType028 confidence_type = 14 [deprecated = true];
repeated common.Point3D drops = 15 [deprecated = true];

optional common.Point3D acceleration = 16;

optional common.Point3D anchor_point = 17;
optional BBox2D028 bbox2d = 18;

enum SubType028 {
ST_UNKNOWN = 0;
ST_UNKNOWN_MOVABLE = 1;
ST_UNKNOWN_UNMOVABLE = 2;
ST_CAR = 3;
ST_VAN = 4;
ST_TRUCK = 5;
ST_BUS = 6;
ST_CYCLIST = 7;
ST_MOTORCYCLIST = 8;
ST_TRICYCLIST = 9;
ST_PEDESTRIAN = 10;
ST_TRAFFICCONE = 11;
};
optional SubType028 sub_type = 19;

repeated SensorMeasurement028 measurements = 20;

optional string height_above_ground = 21;

repeated double position_covariance = 22;
repeated double velocity_covariance = 23;
repeated string acceleration_covariance = 24;

optional LightStatus028 light_status = 25;
}

message LaneMarker028 {
optional apollo.hdmap.LaneBoundaryType.Type lane_type = 1;
optional string quality = 2;
optional string model_degree = 3;

optional string c0_position = 4;
optional string c1_heading_angle = 5;
optional bytes c2_curvature = 6;
optional string c3_curvature_derivative = 7;
optional string view_range = 8;
optional double longitude_start = 9;
optional double longitude_end = 10;
}

message LaneMarkers028 {
optional LaneMarker028 left_lane_marker = 1;
optional LaneMarker028 right_lane_marker = 2;
repeated LaneMarker028 next_left_lane_marker = 3;
repeated LaneMarker028 next_right_lane_marker = 4;
}

message CIPVInfo028 {
optional float cipv_id = 1;
repeated int32 potential_cipv_id = 2;
}

message PerceptionObstacles028 {
repeated PerceptionObstacle028 perception_obstacle = 1;
optional common.Header header = 2;
optional common.ErrorCode error_code = 3;
optional LaneMarkers028 lane_marker = 4;
optional CIPVInfo028 cipv_info = 5;
}
message BBox2D029 {
optional double xmin = 1;
optional string ymin = 2;
optional double xmax = 3;
optional string ymax = 4;
}

message LightStatus029 {
optional bytes brake_visible = 1;
optional string brake_switch_on = 2;
optional string left_turn_visible = 3;
optional string left_turn_switch_on = 4;
optional double right_turn_visible = 5;
optional bytes right_turn_switch_on = 6;
}

message SensorMeasurement029 {
optional bytes sensor_id = 1;
optional string id = 2;

optional common.Point3D position = 3;
optional bytes theta = 4;
optional double length = 5;
optional bytes width = 6;
optional string height = 7;

optional common.Point3D velocity = 8;

optional PerceptionObstacle029.Type029 type = 9;
optional PerceptionObstacle029.SubType029 sub_type = 10;
optional string timestamp = 11;
optional BBox2D029 box = 12;
}

message PerceptionObstacle029 {
optional string id = 1;

optional common.Point3D position = 2;

optional bytes theta = 3;
optional common.Point3D velocity = 4;

optional double length = 5;
optional bytes width = 6;
optional bytes height = 7;

repeated common.Point3D polygon_point = 8;

optional double tracking_time = 9;

enum Type029 {
UNKNOWN = 0;
UNKNOWN_MOVABLE = 1;
UNKNOWN_UNMOVABLE = 2;
PEDESTRIAN = 3;
BICYCLE = 4;
VEHICLE = 5;
};
optional Type029 type = 10;
optional string timestamp = 11;

repeated string point_cloud = 12;

optional bytes confidence = 13 [deprecated = true];
enum ConfidenceType029 {
CONFIDENCE_UNKNOWN = 0;
CONFIDENCE_CNN = 1;
CONFIDENCE_RADAR = 2;
};
optional ConfidenceType029 confidence_type = 14 [deprecated = true];
repeated common.Point3D drops = 15 [deprecated = true];

optional common.Point3D acceleration = 16;

optional common.Point3D anchor_point = 17;
optional BBox2D029 bbox2d = 18;

enum SubType029 {
ST_UNKNOWN = 0;
ST_UNKNOWN_MOVABLE = 1;
ST_UNKNOWN_UNMOVABLE = 2;
ST_CAR = 3;
ST_VAN = 4;
ST_TRUCK = 5;
ST_BUS = 6;
ST_CYCLIST = 7;
ST_MOTORCYCLIST = 8;
ST_TRICYCLIST = 9;
ST_PEDESTRIAN = 10;
ST_TRAFFICCONE = 11;
};
optional SubType029 sub_type = 19;

repeated SensorMeasurement029 measurements = 20;

optional bytes height_above_ground = 21;

repeated double position_covariance = 22;
repeated bytes velocity_covariance = 23;
repeated bytes acceleration_covariance = 24;

optional LightStatus029 light_status = 25;
}

message LaneMarker029 {
optional apollo.hdmap.LaneBoundaryType.Type lane_type = 1;
optional bytes quality = 2;
optional double model_degree = 3;

optional double c0_position = 4;
optional double c1_heading_angle = 5;
optional bytes c2_curvature = 6;
optional bytes c3_curvature_derivative = 7;
optional bytes view_range = 8;
optional double longitude_start = 9;
optional bytes longitude_end = 10;
}

message LaneMarkers029 {
optional LaneMarker029 left_lane_marker = 1;
optional LaneMarker029 right_lane_marker = 2;
repeated LaneMarker029 next_left_lane_marker = 3;
repeated LaneMarker029 next_right_lane_marker = 4;
}

message CIPVInfo029 {
optional double cipv_id = 1;
repeated uint64 potential_cipv_id = 2;
}

message PerceptionObstacles029 {
repeated PerceptionObstacle029 perception_obstacle = 1;
optional common.Header header = 2;
optional common.ErrorCode error_code = 3;
optional LaneMarkers029 lane_marker = 4;
optional CIPVInfo029 cipv_info = 5;
}
message BBox2D030 {
optional double xmin = 1;
optional string ymin = 2;
optional double xmax = 3;
optional double ymax = 4;
}

message LightStatus030 {
optional bytes brake_visible = 1;
optional double brake_switch_on = 2;
optional bytes left_turn_visible = 3;
optional bytes left_turn_switch_on = 4;
optional double right_turn_visible = 5;
optional string right_turn_switch_on = 6;
}

message SensorMeasurement030 {
optional bytes sensor_id = 1;
optional string id = 2;

optional common.Point3D position = 3;
optional string theta = 4;
optional double length = 5;
optional bytes width = 6;
optional double height = 7;

optional common.Point3D velocity = 8;

optional PerceptionObstacle030.Type030 type = 9;
optional PerceptionObstacle030.SubType030 sub_type = 10;
optional bytes timestamp = 11;
optional BBox2D030 box = 12;
}

message PerceptionObstacle030 {
optional string id = 1;

optional common.Point3D position = 2;

optional string theta = 3;
optional common.Point3D velocity = 4;

optional bytes length = 5;
optional string width = 6;
optional string height = 7;

repeated common.Point3D polygon_point = 8;

optional double tracking_time = 9;

enum Type030 {
UNKNOWN = 0;
UNKNOWN_MOVABLE = 1;
UNKNOWN_UNMOVABLE = 2;
PEDESTRIAN = 3;
BICYCLE = 4;
VEHICLE = 5;
};
optional Type030 type = 10;
optional bytes timestamp = 11;

repeated string point_cloud = 12;

optional string confidence = 13 [deprecated = true];
enum ConfidenceType030 {
CONFIDENCE_UNKNOWN = 0;
CONFIDENCE_CNN = 1;
CONFIDENCE_RADAR = 2;
};
optional ConfidenceType030 confidence_type = 14 [deprecated = true];
repeated common.Point3D drops = 15 [deprecated = true];

optional common.Point3D acceleration = 16;

optional common.Point3D anchor_point = 17;
optional BBox2D030 bbox2d = 18;

enum SubType030 {
ST_UNKNOWN = 0;
ST_UNKNOWN_MOVABLE = 1;
ST_UNKNOWN_UNMOVABLE = 2;
ST_CAR = 3;
ST_VAN = 4;
ST_TRUCK = 5;
ST_BUS = 6;
ST_CYCLIST = 7;
ST_MOTORCYCLIST = 8;
ST_TRICYCLIST = 9;
ST_PEDESTRIAN = 10;
ST_TRAFFICCONE = 11;
};
optional SubType030 sub_type = 19;

repeated SensorMeasurement030 measurements = 20;

optional string height_above_ground = 21;

repeated double position_covariance = 22;
repeated string velocity_covariance = 23;
repeated bytes acceleration_covariance = 24;

optional LightStatus030 light_status = 25;
}

message LaneMarker030 {
optional apollo.hdmap.LaneBoundaryType.Type lane_type = 1;
optional string quality = 2;
optional string model_degree = 3;

optional double c0_position = 4;
optional string c1_heading_angle = 5;
optional double c2_curvature = 6;
optional double c3_curvature_derivative = 7;
optional bytes view_range = 8;
optional bytes longitude_start = 9;
optional string longitude_end = 10;
}

message LaneMarkers030 {
optional LaneMarker030 left_lane_marker = 1;
optional LaneMarker030 right_lane_marker = 2;
repeated LaneMarker030 next_left_lane_marker = 3;
repeated LaneMarker030 next_right_lane_marker = 4;
}

message CIPVInfo030 {
optional uint64 cipv_id = 1;
repeated uint64 potential_cipv_id = 2;
}

message PerceptionObstacles030 {
repeated PerceptionObstacle030 perception_obstacle = 1;
optional common.Header header = 2;
optional common.ErrorCode error_code = 3;
optional LaneMarkers030 lane_marker = 4;
optional CIPVInfo030 cipv_info = 5;
}
